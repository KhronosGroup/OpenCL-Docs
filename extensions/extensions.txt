// Copyright 2018-2024 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

= OpenCL Extensions
:R: pass:q,r[^(R)^]
Khronos{R} OpenCL Working Group
:data-uri:
:icons: font
:doctype: book
:numbered!:
:leveloffset: 1
:max-width: 200
:data-uri:
:toc2:
:toclevels: 2

// Extension Template
//:leveloffset: 0
//== Extension Template
//:leveloffset: 2
//<<<
//include::cl_extension_template.asciidoc[]

// Draft Extensions
//:leveloffset: 0
//== Draft Extensions
//:leveloffset: 2
//<<<
//include::cl_draft_extension.asciidoc[]

// Multi-Vendor Extensions
:leveloffset: 0
== Multi-Vendor Extensions
:leveloffset: 2
<<<
include::cl_ext_cxx_for_opencl.asciidoc[]
<<<
include::cl_ext_float_atomics.asciidoc[]
<<<
include::cl_ext_image_from_buffer.asciidoc[]
<<<
include::cl_ext_image_requirements_info.asciidoc[]

// Vendor Extensions
:leveloffset: 0
== Arm Extensions
:leveloffset: 2
<<<
include::cl_arm_controlled_kernel_termination.asciidoc[]
<<<
include::cl_arm_printf.asciidoc[]
<<<
include::cl_arm_protected_memory_allocation.asciidoc[]
<<<
include::cl_arm_scheduling_controls.asciidoc[]

:leveloffset: 0
== Imagination Technologies Extensions
:leveloffset: 2
<<<
include::cl_img_cached_allocations.asciidoc[]
<<<
include::cl_img_generate_mipmap.asciidoc[]
<<<
include::cl_img_mem_properties.asciidoc[]
<<<
include::cl_img_use_gralloc_ptr.asciidoc[]
<<<
include::cl_img_yuv_image.asciidoc[]

:leveloffset: 0
== Intel Extensions
:leveloffset: 2
<<<
include::cl_intel_bfloat16_conversions.asciidoc[]
<<<
include::cl_intel_command_queue_families.asciidoc[]
<<<
include::cl_intel_create_buffer_with_properties.asciidoc[]
<<<
include::cl_intel_device_attribute_query.asciidoc[]
<<<
include::cl_intel_mem_alloc_buffer_location.asciidoc[]
<<<
include::cl_intel_mem_channel_property.asciidoc[]
<<<
include::cl_intel_mem_force_host_memory.asciidoc[]
<<<
include::cl_intel_packed_yuv.asciidoc[]
<<<
include::cl_intel_planar_yuv.asciidoc[]
<<<
include::cl_intel_required_subgroup_size.asciidoc[]
<<<
include::cl_intel_sharing_format_query.asciidoc[]
<<<
include::cl_intel_spirv_device_side_avc_motion_estimation.asciidoc[]
<<<
include::cl_intel_spirv_media_block_io.asciidoc[]
<<<
include::cl_intel_spirv_subgroups.asciidoc[]
<<<
include::cl_intel_split_work_group_barrier.asciidoc[]
<<<
include::cl_intel_subgroups.asciidoc[]
<<<
include::cl_intel_subgroups_char.asciidoc[]
<<<
include::cl_intel_subgroups_long.asciidoc[]
<<<
include::cl_intel_subgroups_short.asciidoc[]
<<<
include::cl_intel_unified_shared_memory.asciidoc[]

:leveloffset: 0
== POCL Extensions
:leveloffset: 2
<<<
include::cl_pocl_content_size.asciidoc[]
