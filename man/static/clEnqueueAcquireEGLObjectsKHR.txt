// Copyright (c) 2014-2020 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clEnqueueAcquireEGLObjectsKHR(3)

== Name

clEnqueueAcquireEGLObjectsKHR - Acquire OpenCL memory objects that have been created from EGL resources.

[source,c]
----
cl_int clEnqueueAcquireEGLObjectsKHR(cl_command_queue command_queue,
                                     cl_uint num_objects,
                                     const cl_mem *mem_objects,
                                     cl_uint num_events_in_wait_list,
                                     const cl_event *event_wait_list,
                                     cl_event *event)
----

== Parameters

  * _command_queue_ - A valid command-queue.
  * _num_objects_ - The number of memory objects to be acquired in
    _mem_objects_.
  * _mem_objects_ - A pointer to a list of OpenCL memory objects that were
    created from EGL resources, within the context associate with
    _command_queue_.
  * _num_events_in_wait_list_ - Number of events in _event_wait_list_.
  * _event_wait_list_ - Specify events that need to complete before this
    particular command can be executed. If _event_wait_list_ is NULL, then
    this particular command does not wait on any event to complete. If
    _event_wait_list_ is NULL, _num_events_in_wait_list_ must be 0. If
    _event_wait_list_ is not NULL, the list of events pointed to by
    _event_wait_list_ must be valid and _num_events_in_wait_list_ must be
    greater than 0. The events specified in _event_wait_list_ act as
    synchronization points.
  * _event_ - Returns an event object that identifies this command and can
    be used to query or queue a wait for the command to complete. _event_
    can be NULL in which case it will not be possible for the application to
    query the status of this command or queue a wait for this command to
    complete.

== Description

This function is used to acquire OpenCL memory objects that have been created from EGL resources.
The EGL objects are acquired by the OpenCL context associated with _command_queue_ and can therefore be used by all command-queues associated with the OpenCL context.

OpenCL memory objects created from EGL resources must be acquired before they can be used by any OpenCL commands queued to a command-queue.
If an OpenCL memory object created from a EGL resource is used while it is not currently acquired by OpenCL, the call attempting to use that OpenCL memory object will return `CL_EGL_RESOURCE_NOT_ACQUIRED_KHR`.

== Errors

Returns `CL_SUCCESS` if the function is executed successfully.
If _num_objects_ is 0 and _mem_objects_ is NULL the function does nothing and returns `CL_SUCCESS`.
Otherwise, it returns one of the following errors:

  * `CL_INVALID_VALUE` if _num_objects_ is zero and _mem_objects_ is not a NULL value or if _num_objects_ > 0 and _mem_objects_ is NULL.
  * `CL_INVALID_MEM_OBJECT` if memory objects in _mem_objects_ are not valid OpenCL memory objects in the context associated with _command_queue_.
  * `CL_INVALID_EGL_OBJECT_KHR` if memory objects in _mem_objects_ have not been created from EGL resources.
  * `CL_INVALID_COMMAND_QUEUE` if _command_queue_ is not a valid command-queue.
  * `CL_INVALID_EVENT_WAIT_LIST` if _event_wait_list_ is NULL and _num_events_in_wait_list_ > 0, or _event_wait_list_ is not NULL and _num_events_in_wait_list_ is 0, or if event objects in _event_wait_list_ are not valid events.
  * `CL_OUT_OF_RESOURCES` if there is a failure to allocate resources required by the OpenCL implementation on the device.
  * `CL_OUT_OF_HOST_MEMORY` if there is a failure to allocate resources required by the OpenCL implementation on the host.

== See Also

reflink:cl_khr_egl_image,
reflink:cl_khr_egl_event,
flink:clEnqueueReleaseEGLObjectsKHR,
flink:clCreateFromEGLImageKHR

== Document Notes

For more information, see the OpenCL Extension Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_Ext.html#cl_khr_egl_image

include::footer.txt[]
