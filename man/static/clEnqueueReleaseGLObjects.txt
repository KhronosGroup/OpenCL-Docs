// Copyright (c) 2014-2020 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clEnqueueReleaseGLObjects(3)

== Name

clEnqueueReleaseGLObjects - Release OpenCL memory objects that have been created from OpenGL objects.

== C Specification

[source,c]
----
cl_int clEnqueueReleaseGLObjects(cl_command_queue command_queue,
                                 cl_uint num_objects,
                                 const cl_mem *mem_objects,
                                 cl_uint num_events_in_wait_list,
                                 const cl_event *event_wait_list,
                                 cl_event *event)
----

== Parameters

  * _command_queue_ - A valid command-queue.
  * _num_objects_ - The number of memory objects to be released in
    _mem_objects_.
  * _mem_objects_ - A pointer to a list of CL memory objects that correspond
    to GL objects.
  * _num_events_in_wait_list_ - Number of events in _event_wait_list_.
  * _event_wait_list_ - These parameters specify events that need to
    complete before this command can be executed. If _event_wait_list_ is
    NULL, then this particular command does not wait on any event to
    complete. If _event_wait_list_ is NULL, _num_events_in_wait_list_ must
    be 0. If _event_wait_list_ is not NULL, the list of events pointed to by
    _event_wait_list_ must be valid and _num_events_in_wait_list_ must be
    greater than 0. The events specified in _event_wait_list_ act as
    synchronization points.
  * _event_ - Returns an event object that identifies this particular
    read/write command and can be used to query or queue a wait for the
    command to complete. _event_ can be NULL in which case it will not be
    possible for the application to query the status of this command or
    queue a wait for this command to complete. If _event_wait_list_ and
    _event_ are not NULL, _event_ should not refer to an element of the
    _event_wait_list_ array.
+
--
If the reflink:cl_khr_gl_event extension is supported, if an OpenGL context
is bound to the current thread, then then any OpenGL commands which

  * affect or access the contents of the memory objects listed in the
    _mem_objects_ list, and
  * are issued on that context after the call to `clEnqueueReleaseGLObjects`

will not execute until after execution of any OpenCL commands preceding the
`clEnqueueReleaseGLObjects` which affect or access any of those memory
objects. If a non-NULL event object is returned, it will report completion
before execution of such OpenGL commands.
--

== Description

Release OpenCL memory objects that have been created from OpenGL objects.
These objects need to be released before they can be used by OpenGL.
The OpenGL objects are released by the OpenCL context associated with _command_queue_.

== Notes

If the reflink:cl_khr_gl_sharing extension is supported and if an OpenGL context is bound to the current thread, then any OpenGL commands which does:

  * affect or access the contents of a memory object listed in the _mem_objects_ list, and
  * are issued on that context after the call to `clEnqueueReleaseGLObjects`

will not execute until after execution of any OpenCL commands preceding the `clEnqueueReleaseGLObjects` which affect or access any of those memory objects.
If a non-NULL _event_ object is returned, it will report completion before execution of such OpenGL commands.

include::gl_sharingInc.txt[]

include::gl_formatsInc.txt[]

include::gl_lifetimeInc.txt[]

include::gl_syncInc.txt[]

== Errors

`clEnqueueReleaseGLObjects` returns `CL_SUCCESS` if the function is executed successfully.
If _num_objects_ is 0 and _mem_objects_ is NULL the function does nothing and returns `CL_SUCCESS`.
Otherwise, it returns one of the following errors:

  * `CL_INVALID_VALUE` if _num_objects_ is zero and _mem_objects_ is not a NULL value or if _num_objects_ > 0 and _mem_objects_ is NULL.
  * `CL_INVALID_MEM_OBJECT` if memory objects in _mem_objects_ are not valid OpenCL memory objects.
  * `CL_INVALID_COMMAND_QUEUE` if _command_queue_ is not a valid command-queue.
  * `CL_INVALID_CONTEXT` if context associated with _command_queue_ was not created from an OpenGL context.
  * `CL_INVALID_GL_OBJECT` if memory objects in _mem_objects_ have not been created from a GL object(s).
  * `CL_INVALID_EVENT_WAIT_LIST` if _event_wait_list_ is NULL and _num_events_in_wait_list_ > 0, or _event_wait_list_ is not NULL and _num_events_in_wait_list_ is 0, or if event objects in _event_wait_list_ are not valid events.
  * `CL_OUT_OF_RESOURCES` if there is a failure to allocate resources required by the OpenCL implementation on the device.
  * `CL_OUT_OF_HOST_MEMORY` if there is a failure to allocate resources required by the OpenCL implementation on the host.

== See Also

reflink:cl_khr_gl_sharing,
flink:clEnqueueAcquireGLObjects,
reflink:cl_khr_gl_event

== Document Notes

For more information, see the OpenCL Extension Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_Ext.html#clEnqueueReleaseGLObjects

include::footer.txt[]
