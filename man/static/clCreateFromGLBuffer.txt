// Copyright (c) 2014-2020 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clCreateFromGLBuffer(3)

== Name

clCreateFromGLBuffer - Creates an OpenCL buffer object from an OpenGL buffer object.

== C Specification

[source,c]
----
cl_mem clCreateFromGLBuffer(cl_context context,
                            cl_mem_flags flags,
                            GLuint bufobj,
                            cl_int * errcode_ret)
----

== Parameters

  * _context_ - A valid OpenCL context created from an OpenGL context.
  * _flags_ - A bit-field that is used to specify usage information. Refer
    to the table for flink:clCreateBuffer for a description of _flags_. Only
    `CL_MEM_READ_ONLY`, `CL_MEM_WRITE_ONLY` and `CL_MEM_READ_WRITE` values
    specified in the table at flink:clCreateBuffer can be used.
  * _bufobj_ - The name of a GL buffer object. The data store of the GL
    buffer object must have have been previously created by calling OpenGL
    function `glBufferData`, although its contents need not be initialized.
    The size of the data store will be used to determine the size of the CL
    buffer object.
  * _errcode_ret_ - Returns an appropriate error code as described below. If
    _errcode_ret_ is NULL, no error code is returned.

== Description

The size of the GL buffer object data store at the time `clCreateFromGLBuffer` is called will be used as the size of buffer object returned by `clCreateFromGLBuffer`.
If the state of a GL buffer object is modified through the GL API (e.g.
`glBufferData`) while there exists a corresponding CL buffer object, subsequent use of the CL buffer object will result in undefined behavior.

The flink:clRetainMemObject and
flink:clReleaseMemObject functions can be used to retain and release the buffer object.

The CL buffer object created using `clCreateFromGLBuffer` can also be used to create a CL 1D image buffer object.

== Notes

include::gl_sharingInc.txt[]

include::gl_formatsInc.txt[]

include::gl_lifetimeInc.txt[]

include::gl_syncInc.txt[]

== Errors

Returns a valid non-zero OpenCL buffer object and _errcode_ret_ is set to `CL_SUCCESS` if the buffer object is created successfully.
Otherwise, it returns a NULL value with one of the following error values returned in _errcode_ret_:

  * `CL_INVALID_CONTEXT` if _context_ is not a valid context or was not created from a GL context.
  * `CL_INVALID_VALUE` if values specified in _flags_ are not valid.
  * `CL_INVALID_GL_OBJECT` if _bufobj_ is not a GL buffer object or is a GL buffer object but does not have an existing data store or the size of the buffer is 0.
  * `CL_OUT_OF_RESOURCES` if there is a failure to allocate resources required by the OpenCL implementation on the device.
  * `CL_OUT_OF_HOST_MEMORY` if there is a failure to allocate resources required by the OpenCL implementation on the host.

== See Also

reflink:cl_khr_gl_sharing,
reflink:cl_khr_gl_event,
flink:clCreateBuffer,
flink:clCreateFromGLTexture

== Document Notes

For more information, see the OpenCL Extension Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_Ext.html#clCreateFromGLBuffer

include::footer.txt[]
