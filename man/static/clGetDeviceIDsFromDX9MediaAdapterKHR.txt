// Copyright (c) 2014-2020 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clGetDeviceIDsFromDX9MediaAdapterKHR(3)

== Name

clGetDeviceIDsFromDX9MediaAdapterKHR - Query a media adapter for any associated OpenCL devices.

== C Specification

[source,c]
----
cl_int clGetDeviceIDsFromDX9MediaAdapterKHR(cl_platform_id platform,
                                            cl_uint num_media_adapters,
                                            cl_dx9_media_adapter_type_khr *media_adapters_type,
                                            void *media_adapters,
                                            cl_dx9_media_adapter_set_khr media_adapter_set,
                                            cl_uint num_entries,
                                            cl_device_id *devices,
                                            cl_int *num_devices)
----

== Parameters

  * _platform_ - Refers to the platform ID returned by
    flink:clGetPlatformIDs.
  * _num_media_adapters_ - Specifies the number of media adapters.
  * _media_adapters_type_ - An array of _num_media_adapters_ entries. Each
    entry specifies the type of media adapter and must be one of the values
    described in the table (Table 9.10.1) below.
+
--
[cols="1a,1a", options="header"]
|====
| cl_dx9_media_adapter_type_khr | Type of media adapters
| `CL_ADAPTER_D3D9_KHR`         | IDirect3DDevice9 *
| `CL_ADAPTER_D3D9EX_KHR`       | IDirect3DDevice9Ex *
| `CL_ADAPTER_DXVA_KHR`         | IDXVAHD_Device *
|====
--
  * _media_adapters_ - An array of _num_media_adapters_ entries. Each entry
    specifies the actual adapter whose type is specified by
    `media_adapter_type`. The _media_adapters_ must be one of the types
    describes in the table above.
  * _media_adapter_set_ - Specifies the set of adapters to return and must
    be one of the values described in the table (Table 9.10.2) below.
+
--
[cols="1a,1a", options="header"]
|====
| cl_dx9_media_adapter_set_khr                     | Description
| `CL_PREFERRED_DEVICES_FOR_DX9_MEDIA_ADAPTER_KHR`
    | The preferred OpenCL devices associated with the media adapter.
| `CL_ALL_DEVICES_FOR_DX9_MEDIA_ADAPTER_KHR`       |
| `CL_ALL_DEVICES_FOR_MEDIA_DX9_ADAPTER_KHR`
    | All OpenCL devices that may interoperate with the media adapter.
|====
--
  * _num_entries_ - The number of cl_device_id entries that can be added to
    _devices_. If _devices_ is not NULL, the _num_entries_ must be greater
    than zero.
  * _devices_ - Returns a list of OpenCL devices found that support the list
    of media adapters specified. The `cl_device_id` values returned in
    _devices_ can be used to identify a specific OpenCL device. If _devices_
    is NULL, this argument is ignored. The number of OpenCL devices returned
    is the minimum of the value specified by _num_entries_ or the number of
    OpenCL devices whose type matches `device_type`.
  * _num_devices_ - Returns the number of OpenCL devices. If _num_devices_
    is NULL, this argument is ignored.

== Description

Queries a media adapter for any associated OpenCL devices.
Adapters with associated OpenCL devices can enable media surface sharing between the two.

== Notes

include::sharingDX9Inc.txt[]

== Errors

Returns `CL_SUCCESS` if the function is executed successfully.
Otherwise, it returns one of the following errors:

  * `CL_INVALID_PLATFORM` if _platform_ is not a valid platform.
  * `CL_INVALID_VALUE` if _num_media_adapters_ is zero or if _media_adapters_type_ is NULL or if _media_adapters_ is NULL.
  * `CL_INVALID_VALUE` if any of the entries in _media_adapters_type_ or _media_adapters_ is not a valid value.
  * `CL_INVALID_VALUE` if _media_adapter_set_ is not a valid value.
  * `CL_INVALID_VALUE` if _num_entries_ is equal to zero and _devices_ is not NULL or if both _num_devices_ and _devices_ are NULL.
  * `CL_DEVICE_NOT_FOUND` if no OpenCL devices that correspond to adapters specified in _media_adapters_ and _media_adapters_type_ were found.
  * `CL_OUT_OF_RESOURCES` if there is a failure to allocate resources required by the OpenCL implementation on the device.
  * `CL_OUT_OF_HOST_MEMORY` if there is a failure to allocate resources required by the OpenCL implementation on the host.

== See Also

reflink:cl_khr_dx9_media_sharing

== Document Notes

For more information, see the OpenCL Extension Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_Ext.html#clGetDeviceIDsFromDX9MediaAdapterKHR

include::footer.txt[]
