// Copyright (c) 2014-2020 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clEnqueueAcquireD3D11ObjectsKHR(3)

== Name

clEnqueueAcquireD3D11ObjectsKHR - Acquire OpenCL memory objects that have been created from Direct3D 11 resources

== C Specification

[source,c]
----
cl_int clEnqueueAcquireD3D11ObjectsKHR(cl_command_queue command_queue,
                                       cl_uint num_objects,
                                       const cl_mem *mem_objects,
                                       cl_uint num_events_in_wait_list,
                                       const cl_event *event_wait_list,
                                       cl_event *event)
----

== Parameters

  * _command_queue_ - A valid command-queue.
  * _num_objects_ - The number of memory objects to be acquired in
    _mem_objects_.
  * _mem_objects_ - A pointer to a list of OpenCL memory objects that were
    created from Direct3D 11 resources.
  * _num_events_in_wait_list_ - Number of events in _event_wait_list_.
  * _event_wait_list_ - Specify events that need to complete before this
    particular command can be executed. If _event_wait_list_ is NULL, then
    this particular command does not wait on any event to complete. If
    _event_wait_list_ is NULL, _num_events_in_wait_list_ must be 0. If
    _event_wait_list_ is not NULL, the list of events pointed to by
    _event_wait_list_ must be valid and _num_events_in_wait_list_ must be
    greater than 0. The events specified in _event_wait_list_ act as
    synchronization points.
  * _event_ - Returns an event object that identifies this particular
    command and can be used to query or queue a wait for this particular
    command to complete. _event_ can be NULL in which case it will not be
    possible for the application to query the status of this command or
    queue a wait for this command to complete. If _event_wait_list_ and
    _event_ are not NULL, _event_ should not refer to an element of the
    _event_wait_list_ array.

== Notes

The Direct3D 11 objects are acquired by the OpenCL context associated with `command-queue` and can therefore be used by all command-queues associated with the OpenCL context.

OpenCL memory objects created from Direct3D 11 resources must be acquired before they can be used by any OpenCL commands queued to a command-queue.
If an OpenCL memory object created from a Direct3D 11 resource is used while it is not currently acquired by OpenCL, the call attempting to use that OpenCL memory object will return `CL_D3D11_RESOURCE_NOT_ACQUIRED_KHR`.

If `CL_CONTEXT_INTEROP_USER_SYNC` is not specified as `CL_TRUE` during context creation, `clEnqueueAcquireD3D11ObjectsKHR` provides the synchronization guarantee that any Direct3D 11 calls involving the interop device(s) used in the OpenCL context made before `clEnqueueAcquireD3D11ObjectsKHR` is called will complete executing before _event_ reports completion and before the execution of any subsequent OpenCL work issued in _command_queue_ begins.
If the context was created with properties specifying `CL_CONTEXT_INTEROP_USER_SYNC` as `CL_TRUE`, the user is responsible for guaranteeing that any Direct3D 11 calls involving the interop device(s) used in the OpenCL context made before `clEnqueueAcquireD3D11ObjectsKHR` is called have completed before calling `clEnqueueAcquireD3D11ObjectsKHR`.

include::sharingD3D11Inc.txt[]

== Errors

Returns `CL_SUCCESS` if the function is executed successfully.
If _num_objects_ is 0 and _mem_objects_ is NULL then the function does nothing and returns `CL_SUCCESS`.
Otherwise it returns one of the following errors:

  * `CL_INVALID_VALUE` if _num_objects_ is zero and _mem_objects_ is not a NULL value or if _num_objects_ > 0 and _mem_objects_ is NULL.
  * `CL_INVALID_MEM_OBJECT` if memory objects in _mem_objects_ are not valid OpenCL memory objects or if memory objects in _mem_objects_ have not been created from Direct3D 11 resources.
  * `CL_INVALID_COMMAND_QUEUE` if _command_queue_ is not a valid command-queue.
  * `CL_INVALID_CONTEXT` if context associated with _command_queue_ was not created from a Direct3D 11 context.
  * `CL_D3D11_RESOURCE_ALREADY_ACQUIRED_KHR` if memory objects in _mem_objects_ have previously been acquired using `clEnqueueAcquireD3D11ObjectsKHR` but have not been released using flink:clEnqueueReleaseD3D11ObjectsKHR.
  * `CL_D3D11_RESOURCE_ALREADY_ACQUIRED_KHR` when any of _mem_objects_ are currently acquired by OpenCL.
  * `CL_INVALID_EVENT_WAIT_LIST` if _event_wait_list_ is NULL and `num_event_in_wait_list` > 0, or _event_wait_list_ is not NULL and `num_event_in_wait_list` is 0, or if event objects in _event_wait_list_ are not valid events.
  * `CL_OUT_OF_HOST_MEMORY` if there is a failure to allocate resources required by the OpenCL implementation on the host.

== See Also

reflink:cl_khr_d3d11_sharing

== Document Notes

For more information, see the OpenCL Extension Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_Ext.html#clEnqueueAcquireD3D11ObjectsKHR

include::footer.txt[]
