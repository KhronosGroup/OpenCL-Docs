// Copyright (c) 2014-2020 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

:data-uri:
:icons: font
include::../config/attribs.txt[]

= clEnqueueReleaseDX9MediaSurfacesKHR(3)

== Name

clEnqueueReleaseDX9MediaSurfacesKHR - Release OpenCL memory objects that have been created from media surfaces.

== C Specification

[source,c]
----
cl_int clEnqueueReleaseDX9MediaSurfacesKHR(cl_command_queue command_queue,
                                           cl_uint num_objects,
                                           const cl_mem *mem_objects,
                                           cl_uint num_events_in_wait_list,
                                           const cl_event *event_wait_list,
                                           cl_event *event)
----

== Parameters

  * _command_queue_ - A valid command-queue.
  * _num_objects_ - The number of memory objects to be released in
    _mem_objects_.
  * _mem_objects_ - A pointer to a list of OpenCL memory objects that were
    created from media surfaces.
  * _num_events_in_wait_list_ - Number of events in _event_wait_list_.
  * _event_wait_list_ - Specify events that need to complete before this
    particular command can be executed. If _event_wait_list_ is NULL, then
    this particular command does not wait on any event to complete. If
    _event_wait_list_ is NULL, _num_events_in_wait_list_ must be 0. If
    _event_wait_list_ is not NULL, the list of events pointed to by
    _event_wait_list_ must be valid and _num_events_in_wait_list_ must be
    greater than 0. The events specified in _event_ returns an event object
    that identifies this particular command and can be used to query or
    queue a wait for this particular command to complete. _event_ can be
    NULL in which case it will not be possible for the application to query
    the status of this command or queue a wait for this command to complete.
    If _event_wait_list_ and _event_ are not NULL, _event_ should not refer
    to an element of the _event_wait_list_ array.

== Notes

Used to release OpenCL memory objects that have been created from media surfaces.
The media surfaces are released by the OpenCL context associated with _command_queue_.

OpenCL memory objects created from media surfaces which have been acquired by OpenCL must be released by OpenCL before they may be accessed by the media adapter API.
Accessing a media surface while its corresponding OpenCL memory object is acquired is in error and will result in undefined behavior, including but not limited to possible OpenCL errors, data corruption, and program termination.

If `CL_CONTEXT_INTEROP_USER_SYNC` is not specified as `CL_TRUE` during context creation, `clEnqueueReleaseDX9MediaSurfacesKHR` provides the synchronization guarantee that any calls to media adapter APIs involving the interop device(s) used in the OpenCL context made after the call to `clEnqueueReleaseDX9MediaSurfacesKHR` will not start executing until after all events in _event_wait_list_ are complete and all work already submitted to _command_queue_ completes execution.
If the context was created with properties specifying `CL_CONTEXT_INTEROP_USER_SYNC` as `CL_TRUE`, the user is responsible for guaranteeing that any media adapter API calls involving the interop device(s) used in the OpenCL context made after `clEnqueueReleaseDX9MediaSurfacesKHR` will not start executing until after event returned by `clEnqueueReleaseDX9MediaSurfacesKHR` reports completion.

include::sharingDX9Inc.txt[]

== Errors

Returns `CL_SUCCESS` returns `CL_SUCCESS` if the function is executed successfully.
If _num_objects_ is 0 and <_mem_objects_> is NULL then the function does nothing and returns `CL_SUCCESS`.
Otherwise it returns one of the following errors:

  * `CL_INVALID_VALUE` if _num_objects_ is zero and _mem_objects_ is not a NULL value or if _num_objects_ > 0 and _mem_objects_ is NULL.
  * `CL_INVALID_MEM_OBJECT` if memory objects in _mem_objects_ are not valid OpenCL memory objects or if memory objects in _mem_objects_ have not been created from valid media surfaces.
  * `CL_INVALID_COMMAND_QUEUE` if _command_queue_ is not a valid command-queue.
  * `CL_INVALID_CONTEXT` if context associated with _command_queue_ was not created from a media object.
  * `CL_DX9_MEDIA_SURFACE_NOT_ACQUIRED_KHR` if memory objects in _mem_objects_ have not been previously been acquired using flink:clEnqueueAcquireDX9MediaSurfacesKHR or have been released using `clEnqueueReleaseDX9MediaSurfacesKHR` since the last time that they were acquired.
  * `CL_INVALID_EVENT_WAIT_LIST` if _event_wait_list_ is NULL and `num_event_in_wait_list` > 0, or _event_wait_list_ is not NULL and `num_event_in_wait_list` is 0, or if event objects in _event_wait_list_ are not valid events.
  * `CL_OUT_OF_HOST_MEMORY` if there is a failure to allocate resources required by the OpenCL implementation on the host.

== See Also

reflink:cl_khr_dx9_media_sharing

== Document Notes

For more information, see the OpenCL Extension Specification at URL

https://www.khronos.org/registry/OpenCL/specs/2.2/html/OpenCL_Ext.html#clEnqueueReleaseDX9MediaSurfacesKHR

include::footer.txt[]
