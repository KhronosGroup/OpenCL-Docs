ifdef::cl_khr_external_semaphore_opaque_fd[]
endif::cl_khr_external_semaphore_opaque_fd[]

=== Modifications to Existing APIs Added by This Spec

=== Add to the "Descriptions of External Semaphore Handle Types" section

==== File Descriptor Handle Types

The `<<cl_khr_external_semaphore_opaque_fd>>` extension extends
{cl_external_semaphore_handle_type_khr_TYPE} to support the following new
types of handles, and adds as a property that may be specified when creating
a semaphore from an external handle:

  * {CL_SEMAPHORE_HANDLE_OPAQUE_FD_KHR} specifies a POSIX file descriptor
    handle that has only limited valid usage outside of OpenCL and other
    compatible APIs.
    It must be compatible with the POSIX system calls `dup`, `dup2`,
    `close`, and the non-standard system call `dup3`.
    Additionally, it must be transportable over a socket using an
    `SCM_RIGHTS` control message.
    It owns a reference to the underlying synchronization primitive
    represented by its semaphore object.

Transference and permanence properties for handle types added by
`<<cl_khr_external_semaphore_opaque_fd>>`:

.Transference and Permanence Properties for `cl_khr_external_semaphore_opaque_fd` handles
[width="100%",cols="60%,<20%,<20%",options="header"]
|====
| *Handle Type* | *Transference* | *Permanence*
| {CL_SEMAPHORE_HANDLE_OPAQUE_FD_KHR}
  | Reference
    | Temporary, Permanent
|====

For these extensions, importing a semaphore payload from a file descriptor
transfers ownership of the file descriptor from the application to the
OpenCL implementation.
The application must not perform any operations on the file descriptor after
a successful import.
