[[cl_khr_gl_depth_images]]
== Sharing OpenGL and OpenGL ES Depth and Depth-Stencil Images

*Name String*::
`cl_khr_gl_depth_images`
*Revision*::
1.0.0
*Ratification Status*::
Ratified
*Extension and Version Dependencies*::
TBD
*Contact*::
  * TBD

=== Other Extension Metadata

*Last Modified Date*::
    2020-04-21
*IP Status*::
    No known IP claims.
*Contributors*::
    TBD

=== Description

`cl_khr_gl_depth_images` extends OpenCL / OpenGL sharing (the
`<<cl_khr_gl_sharing_extension>>`) defined in <<cl_khr_gl_sharing__memobjs,
Creating OpenCL Memory Objects from OpenGL Objects>> to allow an OpenCL
image to be created from an OpenGL depth or depth-stencil texture.

=== Version History

  * Revision 1.0.0, 2020-04-21
  ** First assigned version.

=== Additions to Chapter 5 of the OpenCL 2.2 Specification

`<<cl_khr_gl_depth_images>>` extension extends OpenCL / OpenGL sharing by
allowing an OpenCL depth image to be created from an OpenGL depth or
depth-stencil texture.
Depth images with an image channel order of {CL_DEPTH_STENCIL} can only be
created using the {clCreateFromGLTexture} API.

This extension adds the following new image format for depth-stencil images
to _table 5.6 and 5.7_ of the OpenCL 2.2 specification.

[cols="",options="header",]
|====
| *Enum values that can be specified in channel_order*
| {CL_DEPTH_STENCIL},
  This format can only be used if channel data type is {CL_UNORM_INT24} or
  {CL_FLOAT}.
|====

[cols=",",options="header",]
|====
| *Image Channel Data Type* | *Description*
| {CL_UNORM_INT24}
    | Each channel component is a normalized unsigned 24-bit integer value
| {CL_FLOAT}
    | Each channel component is a single precision floating-point value
|====

This extension adds the following new image format to the minimum list of
supported image formats described in _tables 5.8.a_ and _5.8.b_.

[[required-image-formats]]
._Required Image Formats for_ `<<cl_khr_gl_depth_images>>`
[cols=",,,",]
|====
| *num_channels* | *channel_order* | *channel_data_type* | *read / write*
| 1
  | {CL_DEPTH_STENCIL}
    | {CL_UNORM_INT24} +
      {CL_FLOAT}
    | read only
|====

For the image format given by channel order of {CL_DEPTH_STENCIL} and
channel data type of {CL_UNORM_INT24}, the depth is stored as an unsigned
normalized 24-bit value.

For the image format given by channel order of {CL_DEPTH_STENCIL} and
channel data type of {CL_FLOAT}, each pixel is two 32-bit values.
The depth is stored as a single precision floating-point value followed by
the stencil which is stored as a 8-bit integer value.

The stencil value cannot be read or written using the *read_imagef* and
*write_imagef* built-in functions in an OpenCL kernel.

Depth image objects with an image channel order equal to {CL_DEPTH_STENCIL}
cannot be used as arguments to clEnqueueReadImage, clEnqueueWriteImage,
clEnqueueCopyImage, clEnqueueCopyImageToBuffer, clEnqueueCopyBufferToImage,
clEnqueueMapImage and clEnqueueFillImage and will return a
CL_INVALID_OPERATION error.

=== Additions to the OpenCL Extension Specification

The following new image formats are added to the table of
<<cl_khr_gl_sharing__memobjs-mapping-of-image-formats,OpenGL internal
formats and corresponding OpenCL internal formats>> in the OpenCL extension
specification.
If an OpenGL texture object with an internal format in this table is
successfully created by OpenGL, then there is guaranteed to be a mapping to
one of the corresponding OpenCL image format(s) in that table.

[cols=",",options="header",]
|====
| *GL internal format*    | *CL image format* *(channel order, channel data type)*
| `GL_DEPTH_COMPONENT32F` | {CL_DEPTH}, {CL_FLOAT}
| `GL_DEPTH_COMPONENT16`  | {CL_DEPTH}, {CL_UNORM_INT16}
| `GL_DEPTH24_STENCIL8`   | {CL_DEPTH_STENCIL}, {CL_UNORM_INT24}
| `GL_DEPTH32F_STENCIL8`  | {CL_DEPTH_STENCIL}, {CL_FLOAT}
|====

