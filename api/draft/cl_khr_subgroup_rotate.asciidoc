[[cl_khr_subgroup_rotate]]
== Sub-group Rotation

*Name String*::
`cl_khr_subgroup_rotate`
*Revision*::
1.0.0
*Ratification Status*::
Ratified
*Extension and Version Dependencies*::
This extension requires OpenCL 2.0.
*Contact*::
  * TBD

=== Other Extension Metadata

*Last Modified Date*::
    2022-04-22
*IP Status*::
    No known IP claims.
*Contributors*::
  - KÃ©vin Petit, Arm Ltd.
  - Ben Ashbaugh, Intel
  - Ruihao Zhang, Qualcomm
  - Sven van Haastregt, Arm Ltd.
  - Anastasia Stulova, Arm Ltd.
  - Stuart Brady, Arm Ltd.

=== Description

`cl_khr_subgroup_rotate` adds support for a new sub-group data exchange
operation that makes it possible to rotate values through the work items in
a sub-group.

=== Version History

  * Revision 1.0.0, 2022-04-22
  ** Initial version.


=== New OpenCL C Functions

This extension adds the following built-in function:

[source,opencl_c]
----
gentype sub_group_rotate(gentype value, int delta)
gentype sub_group_clustered_rotate(gentype value, int delta, uint clustersize)
----

=== Modifications to the OpenCL C Specification

(Add a new section 6.15.x, *Sub-group Rotation*) ::

The following preprocessor definitions are added:

[source,opencl_c]
----
#define cl_khr_subgroup_rotate 1
----

The table below describes a specialized OpenCL C programming language
built-in function that allow work items in a sub-group to exchange data.
This function need not be encountered by all work items in a sub-group
executing the kernel.
For the functions below, the generic type name `gentype` may be one of the
supported built-in scalar data types `char`, `uchar`, `short`, `ushort`,
`int`, `uint`, `long`, `ulong`, `float`, `double` (if double precision is
supported), or `half` (if half precision is supported).

[cols="1a,1",options="header",]
|====
|*Function* |*Description*
|[source,opencl_c]
----
gentype sub_group_rotate(
    gentype value, int delta)
----
  | Returns _value_ for the work item with sub-group local ID equal to the
    remainder of the division of the sum of this work item's sub-group local
    ID and _delta_ by the maximum sub-group size. +
    The value of _delta_ is required to be dynamically-uniform for all work
    items in the sub-group, otherwise the behavior is undefined.

    The return value is undefined if the work item with sub-group local ID
    equal to the calculated index is inactive.
|[source,opencl_c]
----
gentype sub_group_clustered_rotate(
    gentype value, int delta,
    uint clustersize)
----
  | Returns _value_ for the work item with sub-group local ID equal to the
    sum of, the remainder of the division of the sum of this work item's ID
    within the cluster and _delta_ by _clustersize_, and the sub-group local
    ID of the first work-item of the cluster to which the work-item
    executing the function belongs. +
    The value of _delta_ is required to be dynamically-uniform for all work
    items in the sub-group, otherwise the behavior is undefined.

    _clustersize_ must be an integer constant expression and a power of two,
    smaller than or equal to the maximum sub-group size, otherwise the
    behavior is undefined.

    The return value is undefined if the work item with sub-group local ID
    equal to the calculated index is inactive.
|====


=== Modifications to the OpenCL SPIR-V Environment Specification

See OpenCL SPIR-V Environment Specification.

=== Interactions With Other Extensions

If `cl_khr_il_program` is supported then the SPIR-V environment
specification modifications described above apply.
