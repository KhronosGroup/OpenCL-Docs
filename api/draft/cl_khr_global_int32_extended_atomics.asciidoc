ifdef::cl_khr_global_int32_extended_atomics[]
endif::cl_khr_global_int32_extended_atomics[]

=== Global Atomics for 32-bit Integers

==== Extended Atomics

._Built-in Atomic Functions for_ `<<cl_khr_global_int32_extended_atomics>>`
[cols="9,5",options="header",]
|====
|*Function* |*Description*
| int **atom_min** (volatile {global} int *_p_, int _val_) +
  uint **atom_min** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute *min*(_old_, _val_) and store minimum value at location
      pointed by _p_.
      The function returns _old_.
| int **atom_max** (volatile {global} int *_p_, int _val_) +
  uint **atom_max** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute *max*(_old_, _val_) and store maximum value at location
      pointed by _p_.
      The function returns _old_.
| int **atom_and** (volatile {global} int *_p_, int _val_) +
  uint **atom_and** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ & val) and store result at location pointed by _p_.
      The function returns _old_.
| int **atom_or** (volatile {global} int *_p_, int _val_) +
  uint **atom_or** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ \| val) and store result at location pointed by _p_.
      The function returns _old_.
| int **atom_xor** (volatile {global} int *_p_, int _val_) +
  uint **atom_xor** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ ^ val) and store result at location pointed by _p_.
      The function returns _old_.
|====
