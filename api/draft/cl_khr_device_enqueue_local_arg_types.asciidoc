// Copyright 2017-2023 The Khronos Group.
// SPDX-License-Identifier: CC-BY-4.0

include::{generated}/meta/{refprefix}cl_khr_device_enqueue_local_arg_types.txt[]

=== Other Extension Metadata

*Last Modified Date*::
    2020-04-21
*IP Status*::
    No known IP claims.
*Contributors*::
    TBD

=== Description

`cl_khr_device_enqueue_local_arg_types` allows arguments to blocks that are
passed to the *enqueue_kernel* built-in function to be pointers to any type
(built-in or user-defined) in local memory, instead of requiring arguments
to blocks to be pointers to void in local memory.

=== Version History

  * Revision 1.0.0, 2020-04-21
  ** First assigned version.
//HEADER



=== Additions to Chapter 6 of the OpenCL 2.0 C Specification

Modify the second paragraph of Section 6.13.17: Enqueuing Kernels:

"The following table describes the list of built-in functions that can be
used to enqueue a kernel.
We use the generic type name +gentype+ to indicate the built-in OpenCL C
scalar or vector integer or floating-point data types, or any user defined
type built from these scalar and vector data types, which can be used as the
type of the pointee of the arguments of the kernel enqueue functions listed
in table 6.31."

Then, replace all occurrences of +local void *+ in table 6.31 with +local
gentype *+.
For example:

[source,opencl_c]
----
int enqueue_kernel(queue_t queue,
                   kernel_enqueue_flags_t flags,
                   const ndrange_t ndrange,
                   void (^block)(local gentype *, ...),
                   uint size0, ... )
----

Additionally, replace all occurrences of +local void*+ in table 6.33 with
+local gentype *+.
For example:

[source,opencl_c]
----
uint get_kernel_work_group_size(
                    void (^block)(local gentype *, ...))
----
