ifdef::cl_khr_int64_extended_atomics[]
endif::cl_khr_int64_extended_atomics[]

._Built-in Atomic Functions for_ `<<cl_khr_int64_extended_atomics>>`
[cols=",",options="header",]
|====
|*Function* |*Description*
| long **atom_min** (volatile {global} long *_p_, long _val_) +
  long **atom_min** (volatile {local} long *_p_, long _val_)

  ulong **atom_min** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_min** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute *min*(_old_, _val_) and store minimum value at location
      pointed by _p_.
      The function returns _old_.
| long **atom_max** (volatile {global} long *_p_, long _val_) +
  long **atom_max** (volatile {local} long *_p_, long _val_)

  ulong **atom_max** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_max** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute *max*(_old_, _val_) and store maximum value at location
      pointed by _p_.
      The function returns _old_.
| long **atom_and** (volatile {global} long *_p_, long _val_) +
  long **atom_and** (volatile {local} long *_p_, long _val_)

  ulong **atom_and** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_and** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ & val) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_or** (volatile {global} long *_p_, long _val_) +
  long **atom_or** (volatile {local} long *_p_, long _val_)

  ulong **atom_or** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_or** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ \| val) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_xor** (volatile {global} long *_p_, long _val_) +
  long **atom_xor** (volatile {local} long *_p_, long _val_)

  ulong **atom_xor** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_xor** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ ^ val) and store result at location pointed by _p_.
      The function returns _old_.
|====

Note: Atomic operations on 64-bit integers and 32-bit integers (and float)
are also atomic with respect to each other.
