ifdef::cl_khr_subgroup_shuffle[]
endif::cl_khr_subgroup_shuffle[]

[[cl_khr_subgroup_shuffle]]
=== General Purpose Shuffles

`cl_khr_subgroup_shuffle` adds additional ways to exchange data among work
items in a sub-group.


==== Add a new Section 6.15.X - Sub-group Shuffle Built-in Functions

The table below describes the OpenCL C programming language built-in
functions that allow work items in a sub-group to exchange data.
These functions need not be encountered by all work items in a sub-group
executing the kernel.
For the functions below, the generic type name `gentype` may be one of the
supported built-in scalar data types `char`, `uchar`, `short`, `ushort`,
`int`, `uint`, `long`, `ulong`, `float`, `double` (if double precision is
supported), or `half` (if half precision is supported).

[cols="1a,1",options="header",]
|====
| *Function* | *Description*
|[source,opencl_c]
----
gentype sub_group_shuffle(
    gentype value, uint index )
----
  | Returns _value_ for the work item with sub-group local ID equal to
    _index_.
    The shuffle _index_ need not be the same for all work items in the
    sub-group.

    The return value is undefined if the work item with sub-group local ID
    equal to _index_ is inactive or if _index_ is greater than or equal to
    the size of the sub-group.
|[source,opencl_c]
----
gentype sub_group_shuffle_xor(
    gentype value, uint mask )
----
  | Returns _value_ for the work item with sub-group local ID equal to
    this work item's sub-group local ID xor'd with _mask_.
    The shuffle _mask_ need not be the same for all work items in the
    sub-group.

    The return value is undefined if the work item with sub-group local ID
    equal to the calculated index is inactive or if the calculated index is
    greater than or equal to the size of the sub-group.

    This is a specialized function that may perform better than the
    equivalent `sub_group_shuffle` on some implementations.
|====


[[extended-sub-groups-mapping]]
=== Function Mapping and Capabilities

This section describes a possible mapping between OpenCL built-in functions
and SPIR-V instructions and required SPIR-V capabilities.

This section is informational and non-normative.

// Note: the Unicode "zero with space" (&#8203;) causes long function names to break much more sensibly.

[cols="1,1,1",options="header"]
|====
| *OpenCL C Function* | *SPIR-V BuiltIn or Instruction* | *Enabling SPIR-V Capability*
3+| For `cl_khr_subgroup_shuffle`:

| `sub_&#8203;group_&#8203;shuffle`
        | *OpGroupNonUniformShuffle*
            | *GroupNonUniformShuffle*
| `sub_&#8203;group_&#8203;shuffle_&#8203;xor`
        | *OpGroupNonUniformShuffleXor*
            | *GroupNonUniformShuffle*
|====
