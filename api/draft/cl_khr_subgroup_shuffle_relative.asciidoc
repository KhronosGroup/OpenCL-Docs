ifdef::cl_khr_subgroup_shuffle_relative[]
endif::cl_khr_subgroup_shuffle_relative[]

[[cl_khr_subgroup_shuffle_relative]]
=== Relative Shuffles

`cl_khr_subgroup_shuffle_relative` adds specialized ways to exchange data
among work items in a sub-group that may perform better on some
implementations.


==== Add a new Section 6.15.X - Sub-group Relative Shuffle Built-in Functions

The table below describes specialized OpenCL C programming language built-in
functions that allow work items in a sub-group to exchange data.
These functions need not be encountered by all work items in a sub-group
executing the kernel.
For the functions below, the generic type name `gentype` may be one of the
supported built-in scalar data types `char`, `uchar`, `short`, `ushort`,
`int`, `uint`, `long`, `ulong`, `float`, `double` (if double precision is
supported), or `half` (if half precision is supported).

[cols="1a,1",options="header",]
|====
| *Function* | *Description*
|[source,opencl_c]
----
gentype sub_group_shuffle_up(
    gentype value, uint delta )
----
  | Returns _value_ for the work item with sub-group local ID equal to this
    work item's sub-group local ID minus _delta_.
    The shuffle _delta_ need not be the same for all work items in the
    sub-group.

    The return value is undefined if the work item with sub-group local ID
    equal to the calculated index is inactive, or _delta_ is greater than
    this work item's sub-group local ID.

    This is a specialized function that may perform better than the
    equivalent `sub_group_shuffle` on some implementations.
|[source,opencl_c]
----
gentype sub_group_shuffle_down(
    gentype value, uint delta )
----
  | Returns _value_ for the work item with sub-group local ID equal to this
    work item's sub-group local ID plus _delta_.
    The shuffle _delta_ need not be the same for all work items in the
    sub-group.

    The return value is undefined if the work item with sub-group local ID
    equal to the calculated index is inactive, or this work item's sub-group
    local ID plus _delta_ is greater than or equal to the size of the
    sub-group.

    This is a specialized function that may perform better than the
    equivalent `sub_group_shuffle` on some implementations.
|====


[[extended-sub-groups-mapping]]
=== Function Mapping and Capabilities

This section describes a possible mapping between OpenCL built-in functions
and SPIR-V instructions and required SPIR-V capabilities.

This section is informational and non-normative.

// Note: the Unicode "zero with space" (&#8203;) causes long function names to break much more sensibly.

[cols="1,1,1",options="header"]
|====
| *OpenCL C Function* | *SPIR-V BuiltIn or Instruction* | *Enabling SPIR-V Capability*
3+| For `cl_khr_subgroup_shuffle_relative`:

| `sub_&#8203;group_&#8203;shuffle_&#8203;up`
        | *OpGroupNonUniformShuffleUp*
            | *GroupNonUniformShuffleRelative*
| `sub_&#8203;group_&#8203;shuffle_&#8203;down`
        | *OpGroupNonUniformShuffleDown*
            | *GroupNonUniformShuffleRelative*
|====
