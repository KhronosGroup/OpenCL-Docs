[[cl_khr_int64_atomics]]
== 64-bit Atomics

*Name String*::
`cl_khr_int64_base_atomics` `cl_khr_int64_extended_atomics`
*Revision*::
1.0.0
*Ratification Status*::
Ratified
*Extension and Version Dependencies*::
TBD
*Contact*::
  * TBD

=== Other Extension Metadata

*Last Modified Date*::
    2020-04-21
*IP Status*::
    No known IP claims.
*Contributors*::
    TBD

=== Description

`cl_khr_int64_base_atomics` and `cl_khr_int64_extended_atomics` allow atomic
 operations to be performed on 64-bit signed and unsigned integers in global
 and local memory.

=== Version History

  * Revision 1.0.0, 2020-04-21
  ** First assigned version.


._Built-in Atomic Functions for_ `<<cl_khr_int64_base_atomics>>`
[cols="9,5",options="header",]
|====
|*Function* |*Description*
| long **atom_add** (volatile {global} long *_p_, long _val_) +
  long **atom_add** (volatile {local} long *_p_, long _val_)

  ulong **atom_add** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_add** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ + _val_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_sub** (volatile {global} long *_p_, long _val_) +
  long **atom_sub** (volatile {local} long *_p_, long _val_) +

  ulong **atom_sub** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_sub** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ - _val_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_xchg** (volatile {global} long *_p_, long _val_) +
  long **atom_xchg** (volatile {local} long *_p_, long _val_)

  ulong **atom_xchg** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_xchg** (volatile {local} ulong *_p_, ulong _val_)
    | Swaps the _old_ value stored at location _p_ with new value given by
      _val_.
      Returns _old_ value.
| long **atom_inc** (volatile {global} long *_p_) +
  long **atom_inc** (volatile {local} long *_p_)

  ulong **atom_inc** (volatile {global} ulong *_p_) +
  ulong **atom_inc** (volatile {local} ulong *_p_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ + _1_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_dec** (volatile {global} long *_p_) +
  long **atom_dec** (volatile {local} long *_p_)

  ulong **atom_dec** (volatile {global} ulong *_p_) +
  ulong **atom_dec** (volatile {local} ulong *_p_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ - _1_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_cmpxchg** (volatile {global} long *_p_, long _cmp_, long _val_) +
  long **atom_cmpxchg** (volatile {local} long *_p_, long _cmp_, long _val_)

  ulong **atom_cmpxchg** (volatile {global} ulong *_p_, ulong _cmp_, ulong _val_) +
  ulong **atom_cmpxchg** (volatile {local} ulong *_p_, ulong _cmp_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ == _cmp_) ? _val_ : _old_ and store result at location
      pointed by _p_.
      The function returns _old_.
|====

._Built-in Atomic Functions for_ `<<cl_khr_int64_extended_atomics>>`
[cols=",",options="header",]
|====
|*Function* |*Description*
| long **atom_min** (volatile {global} long *_p_, long _val_) +
  long **atom_min** (volatile {local} long *_p_, long _val_)

  ulong **atom_min** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_min** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute *min*(_old_, _val_) and store minimum value at location
      pointed by _p_.
      The function returns _old_.
| long **atom_max** (volatile {global} long *_p_, long _val_) +
  long **atom_max** (volatile {local} long *_p_, long _val_)

  ulong **atom_max** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_max** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute *max*(_old_, _val_) and store maximum value at location
      pointed by _p_.
      The function returns _old_.
| long **atom_and** (volatile {global} long *_p_, long _val_) +
  long **atom_and** (volatile {local} long *_p_, long _val_)

  ulong **atom_and** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_and** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ & val) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_or** (volatile {global} long *_p_, long _val_) +
  long **atom_or** (volatile {local} long *_p_, long _val_)

  ulong **atom_or** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_or** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ \| val) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_xor** (volatile {global} long *_p_, long _val_) +
  long **atom_xor** (volatile {local} long *_p_, long _val_)

  ulong **atom_xor** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_xor** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ ^ val) and store result at location pointed by _p_.
      The function returns _old_.
|====

Note: Atomic operations on 64-bit integers and 32-bit integers (and float)
are also atomic with respect to each other.
