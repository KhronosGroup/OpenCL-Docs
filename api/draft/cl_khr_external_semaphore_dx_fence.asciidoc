ifdef::cl_khr_external_semaphore_dx_fence[]
endif::cl_khr_external_semaphore_dx_fence[]

=== Modifications to Existing APIs Added by This Spec

=== Add to the "Descriptions of External Semaphore Handle Types" section

==== NT Handle Types

The `<<cl_khr_external_semaphore_dx_fence>>` extension extends
{cl_external_semaphore_handle_type_khr_TYPE} to support the following new
types of handles, and adds as a property that may be specified when creating
a semaphore from an external handle:

  * {CL_SEMAPHORE_HANDLE_D3D12_FENCE_KHR} specifies an NT handle returned by
    `ID3D12Device::CreateSharedHandle` referring to a Direct3D 12 fence, or
    `ID3D11Device5::CreateFence` referring to a Direct3D 11 fence.
    It owns a reference to the underlying synchronization primitive
    associated with the Direct3D fence.

When waiting on semaphores using {clEnqueueWaitSemaphoresKHR} or signaling
semaphores using {clEnqueueSignalSemaphoresKHR}, the semaphore payload must
be provided for semaphores created from
{CL_SEMAPHORE_HANDLE_D3D12_FENCE_KHR}.

  * If _sema_objects_ list has a mix of semaphores obtained from
    {CL_SEMAPHORE_HANDLE_D3D12_FENCE_KHR} and other handle types, then the
    _sema_payload_list_ should point to a list of _num_sema_objects_ payload
    values for each semaphore in _sema_objects_.
    However, the payload values corresponding to semaphores with type
    {CL_SEMAPHORE_TYPE_BINARY_KHR} can be set to 0 or will be ignored.

{clEnqueueWaitSemaphoresKHR} and {clEnqueueSignalSemaphoresKHR} may return
{CL_INVALID_VALUE} if _sema_objects_ list has one or more semaphores
obtained from {CL_SEMAPHORE_HANDLE_D3D12_FENCE_KHR} and _sema_payload_list_
is NULL.

Transference and permanence properties for handle types added by
`<<cl_khr_external_semaphore_dx_fence>>`:

.Transference and Permanence Properties for `cl_khr_external_semaphore_dx_fence` handles
[width="100%",cols="60%,<20%,<20%",options="header"]
|====
| *Handle Type* | *Transference* | *Permanence*
| {CL_SEMAPHORE_HANDLE_D3D12_FENCE_KHR}
  | Reference
    | Temporary, Permanent
|====

For these extensions, importing a semaphore payload from Windows handles
does not transfer ownership of the handle to the OpenCL implementation.
For handle types defined as NT handles, the application must release
ownership using the CloseHandle system call when the handle is no longer
needed.
