ifdef::cl_khr_global_int32_base_atomics[]
endif::cl_khr_global_int32_base_atomics[]

=== Global Atomics for 32-bit Integers


==== Base Atomics

._Built-in Atomic Functions for_ `<<cl_khr_global_int32_base_atomics>>`
[cols="9,5",options="header",]
|====
|*Function* |*Description*
| int **atom_add** (volatile {global} int *_p_, int _val_) +
  uint **atom_add** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ + _val_) and store result at location pointed by _p_.
      The function returns _old_.
| int **atom_sub** (volatile {global} int *_p_, int _val_) +
  uint **atom_sub** (volatile {global} uint *_p_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ - _val_) and store result at location pointed by _p_.
      The function returns _old_.
| int **atom_xchg** (volatile {global} int *_p_, int _val_) +
  uint **atom_xchg** (volatile {global} uint *_p_, uint _val_)
    | Swaps the _old_ value stored at location _p_ with new value given by
      _val_.
      Returns _old_ value.
| int **atom_inc** (volatile {global} int *_p_) +
  uint **atom_inc** (volatile {global} uint *_p_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ + _1_) and store result at location pointed by _p_.
      The function returns _old_.
| int **atom_dec** (volatile {global} int *_p_) +
  uint **atom_dec** (volatile {global} uint *_p_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ - _1_) and store result at location pointed by _p_.
      The function returns _old_.
| int **atom_cmpxchg** (volatile {global} int *_p_, int _cmp_, int _val_) +
  uint **atom_cmpxchg** (volatile {global} uint *_p_, uint _cmp_, uint _val_)
    | Read the 32-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ == _cmp_) ? _val_ : _old_ and store result at location
      pointed by _p_.
      The function returns _old_.
|====
