ifdef::cl_khr_int64_base_atomics[]
endif::cl_khr_int64_base_atomics[]

._Built-in Atomic Functions for_ `<<cl_khr_int64_base_atomics>>`
[cols="9,5",options="header",]
|====
|*Function* |*Description*
| long **atom_add** (volatile {global} long *_p_, long _val_) +
  long **atom_add** (volatile {local} long *_p_, long _val_)

  ulong **atom_add** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_add** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ + _val_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_sub** (volatile {global} long *_p_, long _val_) +
  long **atom_sub** (volatile {local} long *_p_, long _val_) +

  ulong **atom_sub** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_sub** (volatile {local} ulong *_p_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ - _val_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_xchg** (volatile {global} long *_p_, long _val_) +
  long **atom_xchg** (volatile {local} long *_p_, long _val_)

  ulong **atom_xchg** (volatile {global} ulong *_p_, ulong _val_) +
  ulong **atom_xchg** (volatile {local} ulong *_p_, ulong _val_)
    | Swaps the _old_ value stored at location _p_ with new value given by
      _val_.
      Returns _old_ value.
| long **atom_inc** (volatile {global} long *_p_) +
  long **atom_inc** (volatile {local} long *_p_)

  ulong **atom_inc** (volatile {global} ulong *_p_) +
  ulong **atom_inc** (volatile {local} ulong *_p_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ + _1_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_dec** (volatile {global} long *_p_) +
  long **atom_dec** (volatile {local} long *_p_)

  ulong **atom_dec** (volatile {global} ulong *_p_) +
  ulong **atom_dec** (volatile {local} ulong *_p_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ - _1_) and store result at location pointed by _p_.
      The function returns _old_.
| long **atom_cmpxchg** (volatile {global} long *_p_, long _cmp_, long _val_) +
  long **atom_cmpxchg** (volatile {local} long *_p_, long _cmp_, long _val_)

  ulong **atom_cmpxchg** (volatile {global} ulong *_p_, ulong _cmp_, ulong _val_) +
  ulong **atom_cmpxchg** (volatile {local} ulong *_p_, ulong _cmp_, ulong _val_)
    | Read the 64-bit value (referred to as _old_) stored at location
      pointed by _p_.
      Compute (_old_ == _cmp_) ? _val_ : _old_ and store result at location
      pointed by _p_.
      The function returns _old_.
|====

Note: Atomic operations on 64-bit integers and 32-bit integers (and float)
are also atomic with respect to each other.
