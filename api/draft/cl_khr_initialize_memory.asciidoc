ifdef::cl_khr_initialize_memory[]
endif::cl_khr_initialize_memory[]

=== Additions to Chapter 4 of the OpenCL 2.2 Specification

Add a new context property to _table 4.5_ in _section 4.4_.

// Note: Some of these extension enums and types are currently missing,
// see https://github.com/KhronosGroup/OpenCL-Docs/issues/872

.List of supported context creation properties by {clCreateContext}
[cols="3,2,4",options="header",]
|====
| *Context Property* | *Property value* | *Description*
| {CL_CONTEXT_MEMORY_INITIALIZE_KHR}
  | {cl_context_memory_initialize_khr_TYPE}
    | Describes which memory types for the context must be initialized.
      This is a bit-field, where the following values are currently
      supported:

      {CL_CONTEXT_MEMORY_INITIALIZE_LOCAL_KHR} -- Initialize local memory to
      zeros.

      {CL_CONTEXT_MEMORY_INITIALIZE_PRIVATE_KHR} -- Initialize private
      memory to zeros.
|====


=== Additions to Chapter 6 of the OpenCL 2.2 Specification

Updates to _section 6.9_ -- Restrictions

If the context is created with {CL_CONTEXT_MEMORY_INITIALIZE_KHR},
appropriate memory locations as specified by the bit-field are initialized
with zeroes, prior to the start of execution of any kernel.
The driver chooses when, prior to kernel execution, the initialization of
local and/or private memory is performed.
The only requirement is there should be no values set from outside the
context, which can be read during a kernel execution.
