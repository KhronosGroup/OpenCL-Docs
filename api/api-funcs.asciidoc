// Copyright 2017-2019 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

// clGetPlatformIDs
:clGetPlatformIDs_label: pass:q[*clGetPlatformIDs*]
:clGetPlatformIDs: <<clGetPlatformIDs,{clGetPlatformIDs_label}>>

// clGetPlatformInfo
:clGetPlatformInfo_label: pass:q[*clGetPlatformInfo*]
:clGetPlatformInfo: <<clGetPlatformInfo,{clGetPlatformInfo_label}>>

// clGetDeviceIDs
:clGetDeviceIDs_label: pass:q[*clGetDeviceIDs*]
:clGetDeviceIDs: <<clGetDeviceIDs,{clGetDeviceIDs_label}>>

// clGetDeviceInfo
:clGetDeviceInfo_label: pass:q[*clGetDeviceInfo*]
:clGetDeviceInfo: <<clGetDeviceInfo,{clGetDeviceInfo_label}>>

// clCreateContext
:clCreateContext_label: pass:q[*clCreateContext*]
:clCreateContext: <<clCreateContext,{clCreateContext_label}>>

// clCreateContextFromType
:clCreateContextFromType_label: pass:q[*clCreateContextFromType*]
:clCreateContextFromType: <<clCreateContextFromType,{clCreateContextFromType_label}>>

// clRetainContext
:clRetainContext_label: pass:q[*clRetainContext*]
:clRetainContext: <<clRetainContext,{clRetainContext_label}>>

// clReleaseContext
:clReleaseContext_label: pass:q[*clReleaseContext*]
:clReleaseContext: <<clReleaseContext,{clReleaseContext_label}>>

// clGetContextInfo
:clGetContextInfo_label: pass:q[*clGetContextInfo*]
:clGetContextInfo: <<clGetContextInfo,{clGetContextInfo_label}>>

// clRetainCommandQueue
:clRetainCommandQueue_label: pass:q[*clRetainCommandQueue*]
:clRetainCommandQueue: <<clRetainCommandQueue,{clRetainCommandQueue_label}>>

// clReleaseCommandQueue
:clReleaseCommandQueue_label: pass:q[*clReleaseCommandQueue*]
:clReleaseCommandQueue: <<clReleaseCommandQueue,{clReleaseCommandQueue_label}>>

// clGetCommandQueueInfo
:clGetCommandQueueInfo_label: pass:q[*clGetCommandQueueInfo*]
:clGetCommandQueueInfo: <<clGetCommandQueueInfo,{clGetCommandQueueInfo_label}>>

// clCreateBuffer
:clCreateBuffer_label: pass:q[*clCreateBuffer*]
:clCreateBuffer: <<clCreateBuffer,{clCreateBuffer_label}>>

// clRetainMemObject
:clRetainMemObject_label: pass:q[*clRetainMemObject*]
:clRetainMemObject: <<clRetainMemObject,{clRetainMemObject_label}>>

// clReleaseMemObject
:clReleaseMemObject_label: pass:q[*clReleaseMemObject*]
:clReleaseMemObject: <<clReleaseMemObject,{clReleaseMemObject_label}>>

// clGetSupportedImageFormats
:clGetSupportedImageFormats_label: pass:q[*clGetSupportedImageFormats*]
:clGetSupportedImageFormats: <<clGetSupportedImageFormats,{clGetSupportedImageFormats_label}>>

// clGetMemObjectInfo
:clGetMemObjectInfo_label: pass:q[*clGetMemObjectInfo*]
:clGetMemObjectInfo: <<clGetMemObjectInfo,{clGetMemObjectInfo_label}>>

// clGetImageInfo
:clGetImageInfo_label: pass:q[*clGetImageInfo*]
:clGetImageInfo: <<clGetImageInfo,{clGetImageInfo_label}>>

// clRetainSampler
:clRetainSampler_label: pass:q[*clRetainSampler*]
:clRetainSampler: <<clRetainSampler,{clRetainSampler_label}>>

// clReleaseSampler
:clReleaseSampler_label: pass:q[*clReleaseSampler*]
:clReleaseSampler: <<clReleaseSampler,{clReleaseSampler_label}>>

// clGetSamplerInfo
:clGetSamplerInfo_label: pass:q[*clGetSamplerInfo*]
:clGetSamplerInfo: <<clGetSamplerInfo,{clGetSamplerInfo_label}>>

// clCreateProgramWithSource
:clCreateProgramWithSource_label: pass:q[*clCreateProgramWithSource*]
:clCreateProgramWithSource: <<clCreateProgramWithSource,{clCreateProgramWithSource_label}>>

// clCreateProgramWithBinary
:clCreateProgramWithBinary_label: pass:q[*clCreateProgramWithBinary*]
:clCreateProgramWithBinary: <<clCreateProgramWithBinary,{clCreateProgramWithBinary_label}>>

// clRetainProgram
:clRetainProgram_label: pass:q[*clRetainProgram*]
:clRetainProgram: <<clRetainProgram,{clRetainProgram_label}>>

// clReleaseProgram
:clReleaseProgram_label: pass:q[*clReleaseProgram*]
:clReleaseProgram: <<clReleaseProgram,{clReleaseProgram_label}>>

// clBuildProgram
:clBuildProgram_label: pass:q[*clBuildProgram*]
:clBuildProgram: <<clBuildProgram,{clBuildProgram_label}>>

// clGetProgramInfo
:clGetProgramInfo_label: pass:q[*clGetProgramInfo*]
:clGetProgramInfo: <<clGetProgramInfo,{clGetProgramInfo_label}>>

// clGetProgramBuildInfo
:clGetProgramBuildInfo_label: pass:q[*clGetProgramBuildInfo*]
:clGetProgramBuildInfo: <<clGetProgramBuildInfo,{clGetProgramBuildInfo_label}>>

// clCreateKernel
:clCreateKernel_label: pass:q[*clCreateKernel*]
:clCreateKernel: <<clCreateKernel,{clCreateKernel_label}>>

// clCreateKernelsInProgram
:clCreateKernelsInProgram_label: pass:q[*clCreateKernelsInProgram*]
:clCreateKernelsInProgram: <<clCreateKernelsInProgram,{clCreateKernelsInProgram_label}>>

// clRetainKernel
:clRetainKernel_label: pass:q[*clRetainKernel*]
:clRetainKernel: <<clRetainKernel,{clRetainKernel_label}>>

// clReleaseKernel
:clReleaseKernel_label: pass:q[*clReleaseKernel*]
:clReleaseKernel: <<clReleaseKernel,{clReleaseKernel_label}>>

// clSetKernelArg
:clSetKernelArg_label: pass:q[*clSetKernelArg*]
:clSetKernelArg: <<clSetKernelArg,{clSetKernelArg_label}>>

// clGetKernelInfo
:clGetKernelInfo_label: pass:q[*clGetKernelInfo*]
:clGetKernelInfo: <<clGetKernelInfo,{clGetKernelInfo_label}>>

// clGetKernelWorkGroupInfo
:clGetKernelWorkGroupInfo_label: pass:q[*clGetKernelWorkGroupInfo*]
:clGetKernelWorkGroupInfo: <<clGetKernelWorkGroupInfo,{clGetKernelWorkGroupInfo_label}>>

// clWaitForEvents
:clWaitForEvents_label: pass:q[*clWaitForEvents*]
:clWaitForEvents: <<clWaitForEvents,{clWaitForEvents_label}>>

// clGetEventInfo
:clGetEventInfo_label: pass:q[*clGetEventInfo*]
:clGetEventInfo: <<clGetEventInfo,{clGetEventInfo_label}>>

// clRetainEvent
:clRetainEvent_label: pass:q[*clRetainEvent*]
:clRetainEvent: <<clRetainEvent,{clRetainEvent_label}>>

// clReleaseEvent
:clReleaseEvent_label: pass:q[*clReleaseEvent*]
:clReleaseEvent: <<clReleaseEvent,{clReleaseEvent_label}>>

// clGetEventProfilingInfo
:clGetEventProfilingInfo_label: pass:q[*clGetEventProfilingInfo*]
:clGetEventProfilingInfo: <<clGetEventProfilingInfo,{clGetEventProfilingInfo_label}>>

// clFlush
:clFlush_label: pass:q[*clFlush*]
:clFlush: <<clFlush,{clFlush_label}>>

// clFinish
:clFinish_label: pass:q[*clFinish*]
:clFinish: <<clFinish,{clFinish_label}>>

// clEnqueueReadBuffer
:clEnqueueReadBuffer_label: pass:q[*clEnqueueReadBuffer*]
:clEnqueueReadBuffer: <<clEnqueueReadBuffer,{clEnqueueReadBuffer_label}>>

// clEnqueueWriteBuffer
:clEnqueueWriteBuffer_label: pass:q[*clEnqueueWriteBuffer*]
:clEnqueueWriteBuffer: <<clEnqueueWriteBuffer,{clEnqueueWriteBuffer_label}>>

// clEnqueueCopyBuffer
:clEnqueueCopyBuffer_label: pass:q[*clEnqueueCopyBuffer*]
:clEnqueueCopyBuffer: <<clEnqueueCopyBuffer,{clEnqueueCopyBuffer_label}>>

// clEnqueueReadImage
:clEnqueueReadImage_label: pass:q[*clEnqueueReadImage*]
:clEnqueueReadImage: <<clEnqueueReadImage,{clEnqueueReadImage_label}>>

// clEnqueueWriteImage
:clEnqueueWriteImage_label: pass:q[*clEnqueueWriteImage*]
:clEnqueueWriteImage: <<clEnqueueWriteImage,{clEnqueueWriteImage_label}>>

// clEnqueueCopyImage
:clEnqueueCopyImage_label: pass:q[*clEnqueueCopyImage*]
:clEnqueueCopyImage: <<clEnqueueCopyImage,{clEnqueueCopyImage_label}>>

// clEnqueueCopyImageToBuffer
:clEnqueueCopyImageToBuffer_label: pass:q[*clEnqueueCopyImageToBuffer*]
:clEnqueueCopyImageToBuffer: <<clEnqueueCopyImageToBuffer,{clEnqueueCopyImageToBuffer_label}>>

// clEnqueueCopyBufferToImage
:clEnqueueCopyBufferToImage_label: pass:q[*clEnqueueCopyBufferToImage*]
:clEnqueueCopyBufferToImage: <<clEnqueueCopyBufferToImage,{clEnqueueCopyBufferToImage_label}>>

// clEnqueueMapBuffer
:clEnqueueMapBuffer_label: pass:q[*clEnqueueMapBuffer*]
:clEnqueueMapBuffer: <<clEnqueueMapBuffer,{clEnqueueMapBuffer_label}>>

// clEnqueueMapImage
:clEnqueueMapImage_label: pass:q[*clEnqueueMapImage*]
:clEnqueueMapImage: <<clEnqueueMapImage,{clEnqueueMapImage_label}>>

// clEnqueueUnmapMemObject
:clEnqueueUnmapMemObject_label: pass:q[*clEnqueueUnmapMemObject*]
:clEnqueueUnmapMemObject: <<clEnqueueUnmapMemObject,{clEnqueueUnmapMemObject_label}>>

// clEnqueueNDRangeKernel
:clEnqueueNDRangeKernel_label: pass:q[*clEnqueueNDRangeKernel*]
:clEnqueueNDRangeKernel: <<clEnqueueNDRangeKernel,{clEnqueueNDRangeKernel_label}>>

// clEnqueueNativeKernel
:clEnqueueNativeKernel_label: pass:q[*clEnqueueNativeKernel*]
:clEnqueueNativeKernel: <<clEnqueueNativeKernel,{clEnqueueNativeKernel_label}>>

// clSetCommandQueueProperty
:clSetCommandQueueProperty_label: pass:q[*clSetCommandQueueProperty*]
:clSetCommandQueueProperty: <<clSetCommandQueueProperty,{clSetCommandQueueProperty_label}>>

// clCreateSubBuffer
:clCreateSubBuffer_label: pass:q[*clCreateSubBuffer*]
:clCreateSubBuffer: <<clCreateSubBuffer,{clCreateSubBuffer_label}>>

// clSetMemObjectDestructorCallback
:clSetMemObjectDestructorCallback_label: pass:q[*clSetMemObjectDestructorCallback*]
:clSetMemObjectDestructorCallback: <<clSetMemObjectDestructorCallback,{clSetMemObjectDestructorCallback_label}>>

// clCreateUserEvent
:clCreateUserEvent_label: pass:q[*clCreateUserEvent*]
:clCreateUserEvent: <<clCreateUserEvent,{clCreateUserEvent_label}>>

// clSetUserEventStatus
:clSetUserEventStatus_label: pass:q[*clSetUserEventStatus*]
:clSetUserEventStatus: <<clSetUserEventStatus,{clSetUserEventStatus_label}>>

// clSetEventCallback
:clSetEventCallback_label: pass:q[*clSetEventCallback*]
:clSetEventCallback: <<clSetEventCallback,{clSetEventCallback_label}>>

// clEnqueueReadBufferRect
:clEnqueueReadBufferRect_label: pass:q[*clEnqueueReadBufferRect*]
:clEnqueueReadBufferRect: <<clEnqueueReadBufferRect,{clEnqueueReadBufferRect_label}>>

// clEnqueueWriteBufferRect
:clEnqueueWriteBufferRect_label: pass:q[*clEnqueueWriteBufferRect*]
:clEnqueueWriteBufferRect: <<clEnqueueWriteBufferRect,{clEnqueueWriteBufferRect_label}>>

// clEnqueueCopyBufferRect
:clEnqueueCopyBufferRect_label: pass:q[*clEnqueueCopyBufferRect*]
:clEnqueueCopyBufferRect: <<clEnqueueCopyBufferRect,{clEnqueueCopyBufferRect_label}>>

// clCreateImage2D
:clCreateImage2D_label: pass:q[*clCreateImage2D*]
:clCreateImage2D: <<clCreateImage2D,{clCreateImage2D_label}>>

// clCreateImage3D
:clCreateImage3D_label: pass:q[*clCreateImage3D*]
:clCreateImage3D: <<clCreateImage3D,{clCreateImage3D_label}>>

// clEnqueueMarker
:clEnqueueMarker_label: pass:q[*clEnqueueMarker*]
:clEnqueueMarker: <<clEnqueueMarker,{clEnqueueMarker_label}>>

// clEnqueueWaitForEvents
:clEnqueueWaitForEvents_label: pass:q[*clEnqueueWaitForEvents*]
:clEnqueueWaitForEvents: <<clEnqueueWaitForEvents,{clEnqueueWaitForEvents_label}>>

// clEnqueueBarrier
:clEnqueueBarrier_label: pass:q[*clEnqueueBarrier*]
:clEnqueueBarrier: <<clEnqueueBarrier,{clEnqueueBarrier_label}>>

// clUnloadCompiler
:clUnloadCompiler_label: pass:q[*clUnloadCompiler*]
:clUnloadCompiler: <<clUnloadCompiler,{clUnloadCompiler_label}>>

// clGetExtensionFunctionAddress
:clGetExtensionFunctionAddress_label: pass:q[*clGetExtensionFunctionAddress*]
:clGetExtensionFunctionAddress: <<clGetExtensionFunctionAddress,{clGetExtensionFunctionAddress_label}>>

// clCreateSubDevices
:clCreateSubDevices_label: pass:q[*clCreateSubDevices*]
:clCreateSubDevices: <<clCreateSubDevices,{clCreateSubDevices_label}>>

// clRetainDevice
:clRetainDevice_label: pass:q[*clRetainDevice*]
:clRetainDevice: <<clRetainDevice,{clRetainDevice_label}>>

// clReleaseDevice
:clReleaseDevice_label: pass:q[*clReleaseDevice*]
:clReleaseDevice: <<clReleaseDevice,{clReleaseDevice_label}>>

// clCreateImage
:clCreateImage_label: pass:q[*clCreateImage*]
:clCreateImage: <<clCreateImage,{clCreateImage_label}>>

// clCreateProgramWithBuiltInKernels
:clCreateProgramWithBuiltInKernels_label: pass:q[*clCreateProgramWithBuiltInKernels*]
:clCreateProgramWithBuiltInKernels: <<clCreateProgramWithBuiltInKernels,{clCreateProgramWithBuiltInKernels_label}>>

// clCompileProgram
:clCompileProgram_label: pass:q[*clCompileProgram*]
:clCompileProgram: <<clCompileProgram,{clCompileProgram_label}>>

// clLinkProgram
:clLinkProgram_label: pass:q[*clLinkProgram*]
:clLinkProgram: <<clLinkProgram,{clLinkProgram_label}>>

// clUnloadPlatformCompiler
:clUnloadPlatformCompiler_label: pass:q[*clUnloadPlatformCompiler*]
:clUnloadPlatformCompiler: <<clUnloadPlatformCompiler,{clUnloadPlatformCompiler_label}>>

// clGetKernelArgInfo
:clGetKernelArgInfo_label: pass:q[*clGetKernelArgInfo*]
:clGetKernelArgInfo: <<clGetKernelArgInfo,{clGetKernelArgInfo_label}>>

// clEnqueueFillBuffer
:clEnqueueFillBuffer_label: pass:q[*clEnqueueFillBuffer*]
:clEnqueueFillBuffer: <<clEnqueueFillBuffer,{clEnqueueFillBuffer_label}>>

// clEnqueueFillImage
:clEnqueueFillImage_label: pass:q[*clEnqueueFillImage*]
:clEnqueueFillImage: <<clEnqueueFillImage,{clEnqueueFillImage_label}>>

// clEnqueueMigrateMemObjects
:clEnqueueMigrateMemObjects_label: pass:q[*clEnqueueMigrateMemObjects*]
:clEnqueueMigrateMemObjects: <<clEnqueueMigrateMemObjects,{clEnqueueMigrateMemObjects_label}>>

// clEnqueueMarkerWithWaitList
:clEnqueueMarkerWithWaitList_label: pass:q[*clEnqueueMarkerWithWaitList*]
:clEnqueueMarkerWithWaitList: <<clEnqueueMarkerWithWaitList,{clEnqueueMarkerWithWaitList_label}>>

// clEnqueueBarrierWithWaitList
:clEnqueueBarrierWithWaitList_label: pass:q[*clEnqueueBarrierWithWaitList*]
:clEnqueueBarrierWithWaitList: <<clEnqueueBarrierWithWaitList,{clEnqueueBarrierWithWaitList_label}>>

// clGetExtensionFunctionAddressForPlatform
:clGetExtensionFunctionAddressForPlatform_label: pass:q[*clGetExtensionFunctionAddressForPlatform*]
:clGetExtensionFunctionAddressForPlatform: <<clGetExtensionFunctionAddressForPlatform,{clGetExtensionFunctionAddressForPlatform_label}>>

// clCreateCommandQueueWithProperties
:clCreateCommandQueueWithProperties_label: pass:q[*clCreateCommandQueueWithProperties*]
:clCreateCommandQueueWithProperties: <<clCreateCommandQueueWithProperties,{clCreateCommandQueueWithProperties_label}>>

// clCreatePipe
:clCreatePipe_label: pass:q[*clCreatePipe*]
:clCreatePipe: <<clCreatePipe,{clCreatePipe_label}>>

// clGetPipeInfo
:clGetPipeInfo_label: pass:q[*clGetPipeInfo*]
:clGetPipeInfo: <<clGetPipeInfo,{clGetPipeInfo_label}>>

// clSVMAlloc
:clSVMAlloc_label: pass:q[*clSVMAlloc*]
:clSVMAlloc: <<clSVMAlloc,{clSVMAlloc_label}>>

// clSVMFree
:clSVMFree_label: pass:q[*clSVMFree*]
:clSVMFree: <<clSVMFree,{clSVMFree_label}>>

// clCreateSamplerWithProperties
:clCreateSamplerWithProperties_label: pass:q[*clCreateSamplerWithProperties*]
:clCreateSamplerWithProperties: <<clCreateSamplerWithProperties,{clCreateSamplerWithProperties_label}>>

// clSetKernelArgSVMPointer
:clSetKernelArgSVMPointer_label: pass:q[*clSetKernelArgSVMPointer*]
:clSetKernelArgSVMPointer: <<clSetKernelArgSVMPointer,{clSetKernelArgSVMPointer_label}>>

// clSetKernelExecInfo
:clSetKernelExecInfo_label: pass:q[*clSetKernelExecInfo*]
:clSetKernelExecInfo: <<clSetKernelExecInfo,{clSetKernelExecInfo_label}>>

// clEnqueueSVMFree
:clEnqueueSVMFree_label: pass:q[*clEnqueueSVMFree*]
:clEnqueueSVMFree: <<clEnqueueSVMFree,{clEnqueueSVMFree_label}>>

// clEnqueueSVMMemcpy
:clEnqueueSVMMemcpy_label: pass:q[*clEnqueueSVMMemcpy*]
:clEnqueueSVMMemcpy: <<clEnqueueSVMMemcpy,{clEnqueueSVMMemcpy_label}>>

// clEnqueueSVMMemFill
:clEnqueueSVMMemFill_label: pass:q[*clEnqueueSVMMemFill*]
:clEnqueueSVMMemFill: <<clEnqueueSVMMemFill,{clEnqueueSVMMemFill_label}>>

// clEnqueueSVMMap
:clEnqueueSVMMap_label: pass:q[*clEnqueueSVMMap*]
:clEnqueueSVMMap: <<clEnqueueSVMMap,{clEnqueueSVMMap_label}>>

// clEnqueueSVMUnmap
:clEnqueueSVMUnmap_label: pass:q[*clEnqueueSVMUnmap*]
:clEnqueueSVMUnmap: <<clEnqueueSVMUnmap,{clEnqueueSVMUnmap_label}>>

// clCreateCommandQueue
:clCreateCommandQueue_label: pass:q[*clCreateCommandQueue*]
:clCreateCommandQueue: <<clCreateCommandQueue,{clCreateCommandQueue_label}>>

// clCreateSampler
:clCreateSampler_label: pass:q[*clCreateSampler*]
:clCreateSampler: <<clCreateSampler,{clCreateSampler_label}>>

// clEnqueueTask
:clEnqueueTask_label: pass:q[*clEnqueueTask*]
:clEnqueueTask: <<clEnqueueTask,{clEnqueueTask_label}>>

// clSetDefaultDeviceCommandQueue
:clSetDefaultDeviceCommandQueue_label: pass:q[*clSetDefaultDeviceCommandQueue*]
:clSetDefaultDeviceCommandQueue: <<clSetDefaultDeviceCommandQueue,{clSetDefaultDeviceCommandQueue_label}>>

// clGetDeviceAndHostTimer
:clGetDeviceAndHostTimer_label: pass:q[*clGetDeviceAndHostTimer*]
:clGetDeviceAndHostTimer: <<clGetDeviceAndHostTimer,{clGetDeviceAndHostTimer_label}>>

// clGetHostTimer
:clGetHostTimer_label: pass:q[*clGetHostTimer*]
:clGetHostTimer: <<clGetHostTimer,{clGetHostTimer_label}>>

// clCreateProgramWithIL
:clCreateProgramWithIL_label: pass:q[*clCreateProgramWithIL*]
:clCreateProgramWithIL: <<clCreateProgramWithIL,{clCreateProgramWithIL_label}>>

// clCloneKernel
:clCloneKernel_label: pass:q[*clCloneKernel*]
:clCloneKernel: <<clCloneKernel,{clCloneKernel_label}>>

// clGetKernelSubGroupInfo
:clGetKernelSubGroupInfo_label: pass:q[*clGetKernelSubGroupInfo*]
:clGetKernelSubGroupInfo: <<clGetKernelSubGroupInfo,{clGetKernelSubGroupInfo_label}>>

// clEnqueueSVMMigrateMem
:clEnqueueSVMMigrateMem_label: pass:q[*clEnqueueSVMMigrateMem*]
:clEnqueueSVMMigrateMem: <<clEnqueueSVMMigrateMem,{clEnqueueSVMMigrateMem_label}>>

// clSetProgramReleaseCallback
:clSetProgramReleaseCallback_label: pass:q[*clSetProgramReleaseCallback*]
:clSetProgramReleaseCallback: <<clSetProgramReleaseCallback,{clSetProgramReleaseCallback_label}>>

// clSetProgramSpecializationConstant
:clSetProgramSpecializationConstant_label: pass:q[*clSetProgramSpecializationConstant*]
:clSetProgramSpecializationConstant: <<clSetProgramSpecializationConstant,{clSetProgramSpecializationConstant_label}>>


