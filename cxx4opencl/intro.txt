// Copyright 2019-2020 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[intro]]
== Introduction

This language is built on top of OpenCL C v2.0 and {cpp}17 enabling
most of regular {cpp} features in OpenCL kernel code. Most functionality
from {cpp} and OpenCL C is inherited. Since both OpenCL C and {cpp} are
derived from C and moreover {cpp} is almost fully backward compatible with C,
the main design principle of {cpp} for OpenCL is to reapply existing OpenCL
concepts to {cpp}. Therefore, it is important to refer to
<<opencl-spec, The OpenCL Specification, Version 2.0>> `section
3.2` and `section 3.3` detailing fundamental differences of OpenCL execution
and memory models from the conventional C and {cpp} view.

This document describes the programming language in details. It is not
structured as a standalone document, but rather as an addition to OpenCL C
v2.0 defined in <<openclc-spec, The OpenCL C Specification, Version 2.0>>
and {cpp}17 defined in <<cpp17-spec, The C++17 Specification>>. Where necessary
this document refers to the specifications of those languages accordingly.
A full understanding of {cpp} for OpenCL requires familiarity with the
specifications or other documentation of both languages that {cpp} for OpenCL
is built upon.

The description of {cpp} for OpenCL starts from highlighting <<diff2openclc,
_the differences to OpenCL C_>> and <<diff2cxx, _the differences to {cpp}_>>.

The majority of content covers the behavior that is not documented in
the OpenCL C v2.0 `section 6` and {cpp}17 specifications. This is mainly
related to interactions between OpenCL and {cpp} language features.

== The {cpp} for OpenCL Programming Language 

This programming language inherits features from `OpenCL C v2.0,
s6` as well as {cpp}17. Detailed aspects of OpenCL and {cpp} are not
described in this document as they can be found in their official
specifications.
 
This section documents various language features of {cpp} for OpenCL that are
not covered in either OpenCL or {cpp} specifications, in particular:

 * any behavior that deviates from {cpp}17;
 * any behavior that deviates from OpenCL C v2.0;
 * any behavior that is not governed by OpenCL C and {cpp}.
