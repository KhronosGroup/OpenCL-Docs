// Copyright 2019-2022 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[intro]]
== Introduction

This language is built on top of OpenCL C 3.0 unified and {cpp}17 enabling
most of regular {cpp} features in OpenCL kernel code. Most functionality
from {cpp} and OpenCL C is inherited. Since both OpenCL C and {cpp} are
derived from C and moreover {cpp} is almost fully backward compatible with C,
the main design principle of {cpp} for OpenCL is to reapply existing OpenCL
concepts to {cpp}. Therefore, it is important to refer to
<<opencl-spec, The OpenCL Specification, Version 3.0>> `section
3.2` and `section 3.3` detailing fundamental differences of OpenCL execution
and memory models from the conventional C and {cpp} view.

This document describes the programming language in detail. It is not
structured as a standalone document, but rather as an addition to OpenCL C
3.0 unified specification defined in <<openclc-spec, The OpenCL C Specification,
Version 3.0>> and {cpp}17 defined in <<cpp17-spec, The C++17 Specification>>.
Where necessary this document refers to the specifications of those languages
accordingly. A full understanding of {cpp} for OpenCL requires familiarity with
the specifications or other documentation of both languages that {cpp} for OpenCL
is built upon.

The description of {cpp} for OpenCL starts from highlighting <<diff2openclc,
_the differences to OpenCL C_>> and <<diff2cxx, _the differences to {cpp}_>>.

The majority of content covers the behavior that is not documented in
the `OpenCL C 3.0 s6` and {cpp}17 specifications. This is mainly
related to interactions between OpenCL and {cpp} language features.

This document describes C++ for OpenCL language

 * version 1.0 that is backward compatible with OpenCL 2.0; and
 * version 2021 that is backward compatible with OpenCL 3.0.

[NOTE]
====
{cpp} for OpenCL 2021 is described in this document as a provisional language
version. While no large changes are envisioned in the future, some minor
aspects might not remain identical in its final release.
====

== Version differences 

The main difference between {cpp} for OpenCL version 1.0 and version 2021
comes from the difference between OpenCL 2.0 and OpenCL 3.0 with which they
are respectively compatible. Support for some features of {cpp} for OpenCL 1.0
has become optional as described in `OpenCL 3.0 s6.2.1`. Predefined feature
macros from OpenCL C 3.0 can be used to detect which optional features are present.

This impacts some C++ specific semantics mainly due to optionality of the
generic address space (i.e. `+__opencl_c_generic_address_space+` feature) or
program scope variables (i.e. `+__opencl_c_program_scope_global_variables+`
feature).

== The {cpp} for OpenCL Programming Language 

This programming language inherits features from `OpenCL C 3.0 s6` as well
as {cpp}17. Detailed aspects of OpenCL and {cpp} are not described in this
document as they can be found in their official specifications.
 
This section documents various language features of {cpp} for OpenCL that are
not covered in neither OpenCL nor {cpp} specifications, in particular:

 * any behavior that deviates from {cpp}17;
 * any behavior that deviates from OpenCL C 2.0 or 3.0;
 * any behavior that is not governed by OpenCL C and {cpp}.

All language extensions to OpenCL C are applicable to {cpp} for OpenCL.

 * Extensions to OpenCL C 2.0 or earlier versions apply to {cpp} for OpenCL
   version 1.0.
 * Extensions to OpenCL C 3.0 or earlier versions except for OpenCL C 2.0,
   apply to {cpp} for OpenCL 2021.
