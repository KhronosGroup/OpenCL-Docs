// Copyright 2017 The Khronos Group. 
//
//  Khronos licenses this file to you under the Creative Commons Attribution 4.0 
//  International (CC BY 4.0) License (the "License"); you may not use this file 
//  except in compliance with the License.  You may obtain a copy of the License 
//  at https://creativecommons.org/licenses/by/4.0/
//
//  Unless required by applicable law or agreed to in writing, material distributed 
//  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
//  CONDITIONS OF ANY KIND, either express or implied. If all or a portion of this 
//  material is re-used, notice substantially similar to the following must be included:
//
//  This specification includes material developed at The Khronos Group 
//  (http://www.khronos.org/). Khronos supplied such material on an "AS IS" BASIS, 
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, under 
//  the terms of the Creative Commons Attribution 4.0 International (CC BY 4.0) 
//  License (the "License"), available at https://creativecommons.org/licenses/by/4.0/. 
//  All use of such material is governed by the term of the License. Khronos bears 
//  no responsibility whatsoever for additions or modifications to its material.

[[cl_khr_3d_image_writes]]
== Writing to 3D Image Objects

This section describes the *cl_khr_3d_image_writes* extension. This extension adds built-in functions that allow a kernel to write to 3D image objects in addition to 2D image objects.

The new built-in functions are described in the table below:

._3D Image Built-in Image Write Functions_
[cols=",",options="header",]
|=======================================================================
|*Function*
|*Description*

|void *write_imagef* ( +
image3d_t _image_, +
int4 _coord_, +
float4 _color_) +
{blank}
void *write_imagei* ( +
image3d_t _image_, +
int4 _coord_, +
int4 _color_) +
{blank}
void *write_imageui* ( +
image3d_t _image_, +
int4 _coord_, +
uint4 _color_)
|Write _color_ value to the location specified by coordinate (_x_, _y_, _z_) in the 3D image specified by _image_. The appropriate data format conversion to the specified image format is done before writing the color value. _coord.x_, _coord.y_, and _coord.z_ are considered to be unnormalized coordinates and must be in the range 0 ... image width – 1, 0 ... image height – 1, and 0 ... image depth - 1. +
{blank}
*write_imagef* can only be used with image objects created with _image_channel_data_type_ set to one of the pre-defined packed formats or set to CL_SNORM_INT8, CL_UNORM_INT8, CL_SNORM_INT16, CL_UNORM_INT16, CL_HALF_FLOAT, or CL_FLOAT.  Appropriate data format conversion will be done to convert the channel data from a floating-point value to the actual data format in which the channels are stored. +
{blank}
*write_imagei* can only be used with image objects created with _image_channel_data_type_ set to one of the following values: +
CL_SIGNED_INT8, +
CL_SIGNED_INT16, or +
CL_SIGNED_INT32. +
{blank}
*write_imageui* can only be used with image objects created with _image_channel_data_type_ set to one of the following values: +
CL_UNSIGNED_INT8, +
CL_UNSIGNED_INT16, or +
CL_UNSIGNED_INT32. +
{blank}
The behavior of *write_imagef*, *write_imagei*, and *write_imageui* for image objects created with _image_channel_data_type_ values not specified in the description above, or with (_x_, _y_, _z_) coordinate values that are not in the range (0 ... image width – 1, 0 ... image height – 1, 0 ... image depth - 1) respectively, is undefined.

|=======================================================================
