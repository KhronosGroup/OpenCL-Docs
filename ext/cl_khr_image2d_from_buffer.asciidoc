// Copyright 2017-2020 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[cl_khr_image2d_from_buffer]]
== Creating a 2D Image From A Buffer

This section describes the *cl_khr_image2d_from_buffer* extension.

This extension allows a 2D image to be created from an existing OpenCL buffer memory object.

This extension became a core feature in OpenCL 2.0.

=== General information

==== Version history

[cols="1,1,3",options="header",]
|====
| *Date*     | *Version* | *Description*
| 2020-04-21 | 1.0.0     | First assigned version.
|====

=== Additions to Chapter 4 of the OpenCL 1.2 Specification

The following table entry describes the additions to _table 4.3,_ which allows applications to query the configuration information using *clGetDeviceInfo* for an OpenCL device that supports creating a 2D image from a buffer.

[cols="2,1,2",options="header",]
|=======================================================================
|*cl_device_info*
|*Return Type*
|*Description*

|*CL_DEVICE_IMAGE_ +
PITCH_ALIGNMENT_KHR*
|cl_uint
|The row pitch alignment size in pixels for images created from a buffer.  The value returned must be a power of 2. +
{blank}
If the device does not support images, this value should be 0.

|*CL_DEVICE_IMAGE_BASE_ +
ADDRESS_ALIGNMENT_KHR*
|cl_uint
|This query should be used when an image is created from a buffer which was created using `CL_MEM_USE_HOST_PTR`. The value returned must be a power of 2. +
{blank}
This query specifies the minimum alignment in pixels of the _host_ptr_ specified to *clCreateBuffer*. +
{blank}
If the device does not support images, this value should be 0.

|=======================================================================

=== Additions to Chapter 5 of the OpenCL 1.2 Specification

Add to Section 5.3.1: Creating Image Objects:

A 2D image can be created from a buffer by specifying a _buffer_ object in the _image_desc_ passed to *clCreateImage* for an _image_type_ equal to `CL_MEM_OBJECT_IMAGE2D`. When the 2D image from buffer is created, the client must specify the width, height and image format (i.e. channel order and channel data type). If these are not specified, *clCreateImage* returns a NULL value with _errcode_ret_ set to `CL_INVALID_IMAGE_FORMAT_DESCRIPTOR`.  The pitch can be optionally specified. If the pitch is not specified, the pitch is computed as width {times} bytes per pixel based on the image format.

The pitch specified (or computed if pitch specified is 0) must be a multiple of the maximum of the `CL_DEVICE_IMAGE_PITCH_ALIGNMENT_KHR` value for all devices in the context associated with the _buffer_ that support images.  Otherwise, *clCreateImage* returns a NULL value with _errcode_ret_ set to `CL_INVALID_IMAGE_FORMAT_DESCRIPTOR`.

If the _buffer_ was created with `CL_MEM_USE_HOST_PTR`, the _host_ptr_ specified to *clCreateBuffer* must be aligned to the maximum of the `CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT_KHR` value for all devices in the context associated with the _buffer_ that support images.  Otherwise, *clCreateImage* returns a NULL value with _errcode_ret_ set to `CL_INVALID_IMAGE_FORMAT_DESCRIPTOR`.

The minimum list of supported image formats described in _table 5.8_ of the OpenCL 1.2 specification must be supported for 2D images created from a buffer.

The OpenCL runtime APIs that operate on images (i.e. *clEnqueueReadImage*, *clEnqueueWriteImage*, *clEnqueueFillImage*, *clEnqueueCopyImage*, *clEnqueueCopyImageToBuffer*, *clEnqueueCopyBufferToImage* and *clEnqueueMapImage*) are supported for a 2D image created from a buffer.

When the contents of a buffer object data store are modified, those changes are reflected in the contents of the 2D image object and vice-versa at corresponding synchronization points. The _image_height_ {times} _image_row_pitch_ specified in _image_desc_ must be less than or equal to the size of the buffer object data store.

NOTE: Concurrent reading from, writing to, and copying between both a buffer object and the 2D image object associated with the buffer object is undefined. Only reading from both a buffer object and 2D image object associated with the buffer object is defined. A 2D image and a 2D image created from a buffer use the same image type in OpenCL C (`image2d_t`). The image built-ins functions described in _section 6.12.14.2_, _6.12.14.3_, _6.12.14.4_ and _6.12.14.5_ for `image2d_t` behave the same way for a 2D image and a 2D image from a buffer.
