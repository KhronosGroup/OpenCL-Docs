// Copyright 2017-2018 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[cl_khr_create_command_queue]]
== Creating Command Queues with Properties

=== Overview

The section describes the *cl_khr_create_command_queue* extension.

This extension allows OpenCL 1.x devices to support an equivalent of the
*clCreateCommandQueueWithProperties* API that was added in OpenCL 2.0.
This allows OpenCL 1.x devices to support other optional extensions or
features that use the *clCreateCommandQueueWithProperties* API to specify
additional command queue properties that cannot be specified using the 
OpenCL 1.x *clCreateCommandQueue* API.

No new command queue properties are required by this extension.
Applications may use the existing +CL_DEVICE_QUEUE_PROPERTIES+ query to 
determine command queue properties that are supported by the device.

OpenCL 2.x devices may support this extension for compatibility.  In
this scenario, the function added by this extension will have the same
capabilities as the core *clCreateCommandQueueWithProperties* API.
Applications that only target OpenCL 2.x devices should use the core
OpenCL 2.x *clCreateCommandQueueWithProperties* API instead of this
extension API.

=== New API Functions

[source,c]
----
cl_command_queue clCreateCommandQueueWithPropertiesKHR(
    cl_context context,
    cl_device_id device,
    const cl_queue_properties_khr *properties,
    cl_int *errcode_ret)
----

=== New API Types

[source,c]
----
typedef cl_bitfield cl_queue_properties_khr;
----

=== Modifications to the OpenCL 1.2 Specification

(Add to Table 5.2 for CL_QUEUE_PROPERTIES in Section 5.1) ::
+
--

*Table 5.2* _List of supported param_names by clGetCommandQueueInfo_
[cols="2,1,3",options="header",]
|=======================================================================
|*cl_command_queue_info* |*Return Type* |*Information returned in param_value*

| *CL_QUEUE_PROPERTIES*
| cl_command_queue_properties
| Returns the currently specified properties for the command-queue.
These properties are specified by the _properties_ argument in 
*clCreateCommandQueue*, or by the +CL_QUEUE_PROPERTIES+ property value in
*clCreateCommandQueueWithPropertiesKHR*.

|=======================================================================
--

(Add a new Section 5.1.1, *Creating Command Queues With Properties*) ::
+
--

The function

[source,c]
----
cl_command_queue clCreateCommandQueueWithPropertiesKHR(
    cl_context context,
    cl_device_id device,
    const cl_queue_properties_khr *properties,
    cl_int *errcode_ret)
----

allows creation of a command-queue from an array of properties
for the specified device.

_context_ must be a valid OpenCL context.

_device_ must be a device or sub-device associated with _context_. It
can either be in the list of devices and sub-devices specified when
_context_ is created using *clCreateContext* or 
be a root device with the same device type as specified when _context_
is created using *clCreateContextFromType*.

_properties_ specifies a list of properties for the command-queue and
their corresponding values. Each property name is immediately followed
by the corresponding desired value. The list is terminated with 0. The
list of supported properties is described in the table below. If a
supported property and its value is not specified in _properties_, its
default value will be used. _properties_ can be NULL in which case the
default values for supported command-queue properties will be used.
 
*Table X.Y* _List of supported cl_queue_properties_khr values and description_
[cols="2,1,3",options="header",]
|=======================================================================
|*Queue Properties* |*Property Value* |*Description*

|*CL_QUEUE_PROPERTIES* 
|cl_bitfield 
| This is a bitfield and can be set to a combination of the following
values: +
{blank}
+CL_QUEUE_OUT_OF_ORDER_ EXEC_MODE_ENABLE+ - Determines whether the 
commands queued in the command-queue are executed in-order or out-of-order. If 
set, the commands in the command-queue are executed out-of-order. Otherwise, 
commands are executed in-order. +
{blank}
+CL_QUEUE_PROFILING_ENABLE+ - Enable or disable profiling of commands in 
the command-queue. If set, the profiling of commands is enabled. Otherwise,
profiling of commands is disabled. +
{blank}
If +CL_QUEUE_PROPERTIES+ is not specified an in-order command queue that
does not support profiling of commands is created for the specified device.

|=======================================================================
 
_errcode_ret_ will return an appropriate error code. If _errcode_ret_
is NULL, no error code is returned.

*clCreateCommandQueueWithPropertiesKHR* returns a valid non-zero
command-queue and _errcode_ret_ is set to CL_SUCCESS if the
command-queue is created successfully. Otherwise, it returns a NULL
value with one of the following error values returned in _errcode_ret_:

* +CL_INVALID_CONTEXT+ if _context_ is not a valid context.

* +CL_INVALID_DEVICE+ if _device_ is not a valid device or is not associated
with _context_.

* +CL_INVALID_VALUE+ if values specified in _properties_ are not valid.

* +CL_INVALID_QUEUE_PROPERTIES+ if values specified in _properties_ are
valid but are not supported by the device.

* +CL_OUT_OF_RESOURCES+ if there is a failure to allocate resources required 
by the OpenCL implementation on the device.

* +CL_OUT_OF_HOST_MEMORY+ if there is a failure to allocate resources required 
by the OpenCL implementation on the host.
--
