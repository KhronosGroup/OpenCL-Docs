// Copyright 2017-2020 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[cl_khr_device_enqueue_local_arg_types]]
== Device Enqueue Local Argument Types

This extension allows arguments to blocks that are passed to the *enqueue_kernel* built-in
function to be pointers to any type (built-in or user-defined) in local memory, instead of
requiring arguments to blocks to be pointers to void in local memory.

The name of this extension is *cl_khr_device_enqueue_local_arg_types*.

[[cl_khr_device_enqueue_local_arg_types-additions-to-chapter-6-of-the-opencl-2.0-specification]]
=== Additions to Chapter 6 of the OpenCL 2.0 C Specification

Modify the second paragraph of Section 6.13.17: Enqueuing Kernels:

"The following table describes the list of built-in functions that can be used to enqueue a
kernel. We use the generic type name +gentype+ to indicate the built-in OpenCL C scalar or
vector integer or floating-point data types, or any user defined type built from these scalar and
vector data types, which can be used as the type of the pointee of the arguments of the kernel
enqueue functions listed in table 6.31."

Then, replace all occurrences of +local void *+ in table 6.31 with +local gentype *+.  For example:

[source,c]
----
int enqueue_kernel(queue_t queue,
                   kernel_enqueue_flags_t flags,
                   const ndrange_t ndrange,
                   void (^block)(local gentype *, ...),
                   uint size0, ... )
----

Additionally, replace all occurrences of +local void*+ in table 6.33 with +local gentype *+.  For example:

[source,c]
----
uint get_kernel_work_group_size(
                    void (^block)(local gentype *, ...))
----
