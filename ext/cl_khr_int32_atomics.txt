// Copyright 2017-2018 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[cl_khr_int32_atomics]]
== 32-bit Atomics

This section describes the extensions *cl_khr_global_int32_base_atomics*, *cl_khr_global_int32_extended_atomics*, *cl_khr_local_int32_base_atomics*, and *cl_khr_local_int32_extended_atomics*.
These extensions allow atomic operations to be performed on 32-bit signed and unsigned integers in global and local memory.

These extensions became core features in OpenCL 1.1, except the built-in atomic function names are changed to use the **atomic_** prefix instead of **atom_** and the volatile qualifier was added to the pointer parameter _p_.

=== Global Atomics for 32-bit Integers

==== Base Atomics

._Built-in Atomic Functions for_ *cl_khr_global_int32_base_atomics*
[cols="9,5",options="header",]
|=======================================================================
|*Function* |*Description*

|
int **atom_add** ({global} int *_p_, int _val_) +
uint **atom_add** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ + _val_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_sub** ({global} int *_p_, int _val_)+
uint **atom_sub** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ - _val_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_xchg** ({global} int *_p_, int _val_) +
uint **atom_xchg** ({global} uint *_p_, uint _val_)

|Swaps the _old_ value stored at location _p_ with new value given by
_val_. Returns _old_ value.

|
int **atom_inc** ({global} int *_p_) +
uint **atom_inc** ({global} uint *_p_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ + _1_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_dec** ({global} int *_p_) +
uint **atom_dec** ({global} uint *_p_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ - _1_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_cmpxchg** ({global} int *_p_, int _cmp_, int _val_) +
uint **atom_cmpxchg** ({global} uint *_p_, uint _cmp_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ == _cmp_) ? _val_ : _old_ and store
result at location pointed by _p_. The function returns _old_.

|=======================================================================

==== Extended Atomics

._Built-in Atomic Functions for_ *cl_khr_global_int32_extended_atomics*
[cols="9,5",options="header",]
|=======================================================================
|*Function* |*Description*

|
int **atom_min** ({global} int *_p_, int _val_) +
uint **atom_min** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute *min*(_old_, _val_) and store minimum value at
location pointed by _p_. The function returns _old_.

|
int **atom_max** ({global} int *_p_, int _val_) +
uint **atom_max** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute *max*(_old_, _val_) and store maximum value at
location pointed by _p_. The function returns _old_.

|
int **atom_and** ({global} int *_p_, int _val_) +
uint **atom_and** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ & val) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_or** ({global} int *_p_, int _val_) +
uint **atom_or** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ \| val) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_xor** ({global} int *_p_, int _val_) +
uint **atom_xor** ({global} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ ^ val) and store result at location
pointed by _p_. The function returns _old_.

|=======================================================================

=== Local Atomics for 32-bit Integers

==== Base Atomics

._Built-in Atomic Functions for_ *cl_khr_local_int32_base_atomics*
[cols="9,5",options="header",]
|=======================================================================
|*Function* |*Description*

|
int **atom_add** ({local} int *_p_, int _val_) +
uint **atom_add** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ + _val_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_sub** ({local} int *_p_, int _val_) +
uint **atom_sub** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ - _val_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_xchg** ({local} int *_p_, int _val_) +
uint **atom_xchg** ({local} uint *_p_, uint _val_)

|Swaps the _old_ value stored at location _p_ with new value given by
_val_. Returns _old_ value.

|
int **atom_inc** ({local} int *_p_) +
uint **atom_inc** ({local} uint *_p_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ + _1_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_dec** ({local} int *_p_) +
uint **atom_dec** ({local} uint *_p_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ - _1_) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_cmpxchg** ({local} int *_p_, int _cmp_, int _val_) +
uint **atom_cmpxchg** ({local} uint *_p_, uint _cmp_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ == _cmp_) ? _val_ : _old_ and store
result at location pointed by _p_. The function returns _old_.

|=======================================================================

==== Extended Atomics

._Built-in Atomic Functions for_ *cl_khr_local_int32_extended_atomics*
[cols="9,5",options="header",]
|=======================================================================
|*Function* |*Description*

|
int **atom_min** ({local} int *_p_, int _val_) +
uint **atom_min** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute *min*(_old_, _val_) and store minimum value at
location pointed by _p_. The function returns _old_.

|
int **atom_max** ({local} int *_p_, int _val_) +
uint **atom_max** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute *max*(_old_, _val_) and store maximum value at
location pointed by _p_. The function returns _old_.

|
int **atom_and** ({local} int *_p_, int _val_) +
uint **atom_and** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ & val) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_or** ({local} int *_p_, int _val_) +
uint **atom_or** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ \| val) and store result at location
pointed by _p_. The function returns _old_.

|
int **atom_xor** ({local} int *_p_, int _val_) +
uint **atom_xor** ({local} uint *_p_, uint _val_)

|Read the 32-bit value (referred to as _old_) stored at location
pointed by _p_. Compute (_old_ ^ val) and store result at location
pointed by _p_. The function returns _old_.

|=======================================================================

